import Link from 'next/link';
import Image from 'next/image';
import type { Metadata } from 'next';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';

export const metadata: Metadata = {
  title: 'Trang ch·ªß',
  description: 'Kh√°m ph√° b·ªô s∆∞u t·∫≠p audio ch·∫•t l∆∞·ª£ng cao t·∫°i Audio T√†i L·ªôc. Tai nghe, loa, ampli v√† ph·ª• ki·ªán √¢m thanh ch√≠nh h√£ng v·ªõi gi√° t·ªët nh·∫•t.',
  openGraph: {
    title: 'Audio T√†i L·ªôc - Trang ch·ªß',
    description: 'Kh√°m ph√° b·ªô s∆∞u t·∫≠p audio ch·∫•t l∆∞·ª£ng cao t·∫°i Audio T√†i L·ªôc.',
    url: '/',
  },
};

// Fetch featured products
async function fetchFeaturedProducts() {
  try {
    const base = process.env.NEXT_PUBLIC_API_BASE_URL;
    if (!base) return [];

    const response = await fetch(`${base}/catalog/products?featured=true&pageSize=6`, {
      next: { revalidate: 300 }
    });

    if (!response.ok) {
      return [];
    }

    const data = await response.json();
    return data.items || [];
  } catch {
    return [];
  }
}

// Fetch categories
async function fetchCategories() {
  try {
    const base = process.env.NEXT_PUBLIC_API_BASE_URL;
    if (!base) return [];

    const res = await fetch(`${base}/catalog/categories`, {
      next: { revalidate: 600 }
    });

    if (!res.ok) return [];

    return await res.json();
  } catch {
    return [];
  }
}

// Fetch featured services
async function fetchFeaturedServices() {
  try {
    const base = process.env.NEXT_PUBLIC_API_BASE_URL;
    if (!base) return [];

    const response = await fetch(`${base}/services?isActive=true&pageSize=3`, {
      next: { revalidate: 300 }
    });

    if (!response.ok) {
      return [];
    }

    const data = await response.json();
    return data.items || [];
  } catch {
    return [];
  }
}

// Fetch featured projects
async function fetchFeaturedProjects() {
  try {
    const base = process.env.NEXT_PUBLIC_API_BASE_URL;
    if (!base) return [];

    const response = await fetch(`${base}/projects?featured=true`, {
      next: { revalidate: 600 }
    });

    if (!response.ok) {
      return [];
    }

    return await response.json();
  } catch {
    return [];
  }
}

export default async function HomePage() {
  const [featuredProducts, categories, featuredServices, featuredProjects] = await Promise.all([
    fetchFeaturedProducts(),
    fetchCategories(),
    fetchFeaturedServices(),
    fetchFeaturedProjects()
  ]);

  // Structured data for SEO
  const structuredData = {
    "@context": "https://schema.org",
    "@type": "Store",
    "name": "Audio T√†i L·ªôc",
    "description": "C·ª≠a h√†ng audio chuy√™n nghi·ªáp v·ªõi c√°c s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao",
    "url": process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000",
    "logo": `${process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000"}/logo.png`,
    "sameAs": [
      "https://facebook.com/audiotailoc",
      "https://instagram.com/audiotailoc"
    ],
    "hasOfferCatalog": {
      "@type": "OfferCatalog",
      "name": "S·∫£n ph·∫©m Audio",
      "itemListElement": featuredProducts.slice(0, 3).map((product: any) => ({
        "@type": "Offer",
        "itemOffered": {
          "@type": "Product",
          "name": product.name,
          "description": product.description,
          "image": product.imageUrl,
          "offers": {
            "@type": "Offer",
            "price": product.priceCents / 100,
            "priceCurrency": "VND",
            "availability": "https://schema.org/InStock"
          }
        }
      }))
    }
  };

  return (
    <>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
      />
    <div className="flex flex-col min-h-screen">
      {/* Hero Section */}
      <section className="relative bg-gradient-to-r from-blue-600 to-purple-600 text-white overflow-hidden">
        <div className="absolute inset-0 bg-black/20"></div>
        <div className="relative container mx-auto px-4 py-16 sm:py-24 lg:py-32 text-center">
          <div className="mb-8">
            <div className="text-8xl mb-6">üéµ</div>
            <h1 className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold mb-6">
              Audio T√†i L·ªôc
            </h1>
            <p className="text-xl sm:text-2xl md:text-3xl mb-8 max-w-3xl mx-auto leading-relaxed">
              N√¢ng t·∫ßm tr·∫£i nghi·ªám √¢m thanh c·ªßa b·∫°n v·ªõi nh·ªØng s·∫£n ph·∫©m audio ch·∫•t l∆∞·ª£ng cao
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center max-w-md sm:max-w-none mx-auto">
              <Button asChild size="lg" className="bg-white text-blue-600 hover:bg-gray-100 w-full sm:w-auto text-lg px-8 py-4">
                <Link href="/products">üéß Kh√°m ph√° s·∫£n ph·∫©m</Link>
              </Button>
              <Button asChild variant="outline" size="lg" className="border-white text-white hover:bg-white hover:text-blue-600 w-full sm:w-auto text-lg px-8 py-4">
                <Link href="/services">üîß D·ªãch v·ª• chuy√™n nghi·ªáp</Link>
              </Button>
            </div>
          </div>
          
          {/* Features */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto">
            <div className="text-center">
              <div className="text-4xl mb-4">üöö</div>
              <h3 className="text-lg font-semibold mb-2">Giao h√†ng nhanh</h3>
              <p className="text-sm opacity-90">Giao h√†ng to√†n qu·ªëc trong 24-48h</p>
            </div>
            <div className="text-center">
              <div className="text-4xl mb-4">üõ°Ô∏è</div>
              <h3 className="text-lg font-semibold mb-2">B·∫£o h√†nh ch√≠nh h√£ng</h3>
              <p className="text-sm opacity-90">B·∫£o h√†nh t·ª´ 12-24 th√°ng</p>
            </div>
            <div className="text-center">
              <div className="text-4xl mb-4">üí¨</div>
              <h3 className="text-lg font-semibold mb-2">H·ªó tr·ª£ 24/7</h3>
              <p className="text-sm opacity-90">T∆∞ v·∫•n v√† h·ªó tr·ª£ m·ªçi l√∫c</p>
            </div>
          </div>
        </div>
      </section>

      {/* Categories Section */}
      <section className="py-16 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">Danh m·ª•c s·∫£n ph·∫©m</h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              Kh√°m ph√° c√°c danh m·ª•c s·∫£n ph·∫©m ƒëa d·∫°ng v·ªõi ch·∫•t l∆∞·ª£ng cao
            </p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {categories.slice(0, 6).map((category: any) => (
              <Link key={category.id} href={`/categories/${category.slug}`}>
                <Card className="text-center hover:shadow-lg transition-shadow cursor-pointer group">
                  <CardContent className="p-6">
                    <div className="text-4xl mb-3 group-hover:scale-110 transition-transform">
                      {category.icon || 'üìÇ'}
                    </div>
                    <h3 className="font-semibold text-sm group-hover:text-blue-600 transition-colors">
                      {category.name}
                    </h3>
                    <p className="text-xs text-gray-500 mt-1">
                      {category.productCount || 0} s·∫£n ph·∫©m
                    </p>
                  </CardContent>
                </Card>
              </Link>
            ))}
          </div>
          
          <div className="text-center mt-8">
            <Button asChild variant="outline">
              <Link href="/categories">Xem t·∫•t c·∫£ danh m·ª•c</Link>
            </Button>
          </div>
        </div>
      </section>

      {/* Featured Products Section */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">S·∫£n ph·∫©m n·ªïi b·∫≠t</h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              Nh·ªØng s·∫£n ph·∫©m ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t v·ªõi ch·∫•t l∆∞·ª£ng v√† gi√° c·∫£ t·ªët nh·∫•t
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {featuredProducts.map((product: any) => (
              <Card key={product.id} className="group hover:shadow-lg transition-shadow">
                <div className="relative h-48 overflow-hidden">
                  <Image
                    src={product.imageUrl || 'https://placehold.co/400x300?text=Product'}
                    alt={product.name}
                    fill
                    className="object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                </div>
                <CardHeader>
                  <CardTitle className="text-lg group-hover:text-blue-600 transition-colors">
                    {product.name}
                  </CardTitle>
                  <CardDescription className="line-clamp-2">
                    {product.description}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex justify-between items-center">
                    <span className="text-xl font-bold text-blue-600">
                      {new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND',
                        minimumFractionDigits: 0,
                        maximumFractionDigits: 0,
                      }).format(product.priceCents)}
                    </span>
                    <Button asChild size="sm">
                      <Link href={`/products/${product.slug}`}>Xem chi ti·∫øt</Link>
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
          
          <div className="text-center mt-8">
            <Button asChild>
              <Link href="/products">Xem t·∫•t c·∫£ s·∫£n ph·∫©m</Link>
            </Button>
          </div>
        </div>
      </section>

      {/* Services Section */}
      {featuredServices.length > 0 && (
        <section className="py-16 bg-gray-50">
          <div className="container mx-auto px-4">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">D·ªãch v·ª• chuy√™n nghi·ªáp</h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n gi√†u kinh nghi·ªám v·ªõi c√°c d·ªãch v·ª• √¢m thanh ch·∫•t l∆∞·ª£ng cao
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {featuredServices.map((service: any) => (
                <Card key={service.id} className="text-center hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <div className="text-4xl mb-4">üîß</div>
                    <CardTitle className="text-lg">{service.name}</CardTitle>
                    <CardDescription>
                      {service.description}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="mb-4">
                      <span className="text-2xl font-bold text-blue-600">
                        {new Intl.NumberFormat('vi-VN', {
                          style: 'currency',
                          currency: 'VND',
                          minimumFractionDigits: 0,
                          maximumFractionDigits: 0,
                        }).format(service.basePriceCents)}
                      </span>
                    </div>
                    <Button asChild className="w-full">
                      <Link href={`/booking?service=${service.id}`}>ƒê·∫∑t l·ªãch ngay</Link>
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            <div className="text-center mt-8">
              <Button asChild variant="outline">
                <Link href="/services">Xem t·∫•t c·∫£ d·ªãch v·ª•</Link>
              </Button>
            </div>
          </div>
        </section>
      )}

      {/* Projects Section */}
      {featuredProjects.length > 0 && (
        <section className="py-16">
          <div className="container mx-auto px-4">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">D·ª± √°n ƒë√£ ho√†n th√†nh</h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                Kh√°m ph√° c√°c d·ª± √°n √¢m thanh chuy√™n nghi·ªáp m√† ch√∫ng t√¥i ƒë√£ th·ª±c hi·ªán
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {featuredProjects.slice(0, 3).map((project: any) => (
                <Card key={project.id} className="group hover:shadow-lg transition-shadow overflow-hidden">
                  {project.images && project.images.length > 0 && (
                    <div className="relative h-48 overflow-hidden">
                      <Image
                        src={project.images[0]}
                        alt={project.name}
                        fill
                        className="object-cover group-hover:scale-105 transition-transform duration-300"
                      />
                      <div className="absolute inset-0 bg-black/20 group-hover:bg-black/30 transition-colors duration-300" />
                    </div>
                  )}
                  <CardHeader>
                    <CardTitle className="text-lg group-hover:text-blue-600 transition-colors">
                      {project.name}
                    </CardTitle>
                    {project.description && (
                      <CardDescription className="line-clamp-2">
                        {project.description}
                      </CardDescription>
                    )}
                  </CardHeader>
                  <CardContent>
                    <Button asChild className="w-full">
                      <Link href={`/projects/${project.slug}`}>Xem chi ti·∫øt</Link>
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            <div className="text-center mt-8">
              <Button asChild variant="outline">
                <Link href="/projects">Xem t·∫•t c·∫£ d·ª± √°n</Link>
              </Button>
            </div>
          </div>
        </section>
      )}

      {/* Why Choose Us Section */}
      <section className="py-16 bg-blue-600 text-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">T·∫°i sao ch·ªçn Audio T√†i L·ªôc?</h2>
            <p className="text-blue-100 max-w-2xl mx-auto">
              Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám √¢m thanh t·ªët nh·∫•t cho kh√°ch h√†ng
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <div className="text-center">
              <div className="text-5xl mb-4">üèÜ</div>
              <h3 className="text-xl font-semibold mb-2">Ch·∫•t l∆∞·ª£ng h√†ng ƒë·∫ßu</h3>
              <p className="text-blue-100">S·∫£n ph·∫©m ch√≠nh h√£ng v·ªõi ch·∫•t l∆∞·ª£ng ƒë∆∞·ª£c ki·ªÉm ƒë·ªãnh</p>
            </div>
            <div className="text-center">
              <div className="text-5xl mb-4">üë®‚Äçüîß</div>
              <h3 className="text-xl font-semibold mb-2">K·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp</h3>
              <p className="text-blue-100">ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n gi√†u kinh nghi·ªám</p>
            </div>
            <div className="text-center">
              <div className="text-5xl mb-4">üí∞</div>
              <h3 className="text-xl font-semibold mb-2">Gi√° c·∫£ h·ª£p l√Ω</h3>
              <p className="text-blue-100">Cam k·∫øt gi√° t·ªët nh·∫•t th·ªã tr∆∞·ªùng</p>
            </div>
            <div className="text-center">
              <div className="text-5xl mb-4">ü§ù</div>
              <h3 className="text-xl font-semibold mb-2">D·ªãch v·ª• t·∫≠n t√¢m</h3>
              <p className="text-blue-100">H·ªó tr·ª£ kh√°ch h√†ng 24/7</p>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-gradient-to-r from-purple-600 to-blue-600 text-white">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-3xl font-bold mb-4">S·∫µn s√†ng n√¢ng t·∫ßm √¢m thanh?</h2>
          <p className="text-xl mb-8 max-w-2xl mx-auto">
            Li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay h√¥m nay ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n mi·ªÖn ph√≠
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button asChild size="lg" className="bg-white text-blue-600 hover:bg-gray-100">
              <Link href="/contact">Li√™n h·ªá ngay</Link>
            </Button>
            <Button asChild variant="outline" size="lg" className="border-white text-white hover:bg-white hover:text-blue-600">
              <Link href="/booking">ƒê·∫∑t l·ªãch t∆∞ v·∫•n</Link>
            </Button>
          </div>
        </div>
      </section>
    </div>
    </>
  );
}


