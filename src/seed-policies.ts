import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function seedPolicies() {
  console.log('üå± Seeding policies...');

  // Delete existing policies first
  await prisma.policies.deleteMany();

  const policiesData = [
    {
      title: 'Ch√≠nh s√°ch giao h√†ng',
      contentHtml: `
        <h2>Ch√≠nh s√°ch giao h√†ng c·ªßa AudioTaiLoc</h2>

        <h3>1. Ph·∫°m vi giao h√†ng</h3>
        <p>Ch√∫ng t√¥i cung c·∫•p d·ªãch v·ª• giao h√†ng tr√™n to√†n qu·ªëc v·ªõi c√°c ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn linh ho·∫°t ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa qu√Ω kh√°ch.</p>

        <h3>2. Th·ªùi gian giao h√†ng</h3>
        <ul>
          <li><strong>N·ªôi th√†nh H√† N·ªôi v√† TP.HCM:</strong> 1-2 ng√†y l√†m vi·ªác</li>
          <li><strong>C√°c t·ªânh th√†nh kh√°c:</strong> 2-4 ng√†y l√†m vi·ªác</li>
          <li><strong>Khu v·ª±c kh√≥ khƒÉn:</strong> 3-7 ng√†y l√†m vi·ªác</li>
        </ul>

        <h3>3. Ph√≠ giao h√†ng</h3>
        <ul>
          <li><strong>ƒê∆°n h√†ng t·ª´ 500.000ƒë:</strong> Mi·ªÖn ph√≠ giao h√†ng</li>
          <li><strong>ƒê∆°n h√†ng d∆∞·ªõi 500.000ƒë:</strong> 30.000ƒë (n·ªôi th√†nh), 50.000ƒë (li√™n t·ªânh)</li>
        </ul>

        <h3>4. Ph∆∞∆°ng th·ª©c giao h√†ng</h3>
        <ul>
          <li>Giao h√†ng t·∫≠n n∆°i b·ªüi ƒë·ªôi ng≈© giao h√†ng chuy√™n nghi·ªáp</li>
          <li>Giao h√†ng qua c√°c ƒë∆°n v·ªã v·∫≠n chuy·ªÉn uy t√≠n (GHTK, GHN, Viettel Post)</li>
          <li>Giao h√†ng h·ªèa t·ªëc cho c√°c ƒë∆°n h√†ng kh·∫©n c·∫•p</li>
        </ul>

        <h3>5. L∆∞u √Ω khi nh·∫≠n h√†ng</h3>
        <ul>
          <li>Qu√Ω kh√°ch vui l√≤ng ki·ªÉm tra k·ªπ s·∫£n ph·∫©m tr∆∞·ªõc khi k√Ω nh·∫≠n</li>
          <li>Trong tr∆∞·ªùng h·ª£p s·∫£n ph·∫©m b·ªã h∆∞ h·ªèng, qu√Ω kh√°ch c√≥ quy·ªÅn t·ª´ ch·ªëi nh·∫≠n h√†ng</li>
          <li>Vui l√≤ng gi·ªØ l·∫°i h√≥a ƒë∆°n v√† bao b√¨ s·∫£n ph·∫©m ƒë·ªÉ thu·∫≠n ti·ªán cho vi·ªác b·∫£o h√†nh</li>
        </ul>
      `,
      summary: 'Ch√≠nh s√°ch giao h√†ng to√†n qu·ªëc v·ªõi th·ªùi gian v√† ph√≠ r√µ r√†ng',
      type: 'SHIPPING',
      slug: 'shipping-policy'
    },
    {
      title: 'Ch√≠nh s√°ch b·∫£o h√†nh',
      contentHtml: `
        <h2>Ch√≠nh s√°ch b·∫£o h√†nh s·∫£n ph·∫©m</h2>

        <h3>1. Th·ªùi h·∫°n b·∫£o h√†nh</h3>
        <ul>
          <li><strong>Tai nghe, loa:</strong> 12 th√°ng</li>
          <li><strong>√Çm thanh chuy√™n nghi·ªáp:</strong> 24 th√°ng</li>
          <li><strong>Ph·ª• ki·ªán:</strong> 6 th√°ng</li>
        </ul>

        <h3>2. ƒêi·ªÅu ki·ªán b·∫£o h√†nh</h3>
        <ul>
          <li>S·∫£n ph·∫©m c√≤n trong th·ªùi h·∫°n b·∫£o h√†nh</li>
          <li>C√≤n tem b·∫£o h√†nh v√† h√≥a ƒë∆°n mua h√†ng</li>
          <li>L·ªói do nh√† s·∫£n xu·∫•t (kh√¥ng bao g·ªìm l·ªói do s·ª≠ d·ª•ng sai c√°ch)</li>
        </ul>

        <h3>3. Quy tr√¨nh b·∫£o h√†nh</h3>
        <ol>
          <li>Li√™n h·ªá hotline: 1900 XXX XXX ho·∫∑c g·ª≠i email ƒë·∫øn support@audiotailoc.com</li>
          <li>Cung c·∫•p th√¥ng tin ƒë∆°n h√†ng v√† m√¥ t·∫£ l·ªói</li>
          <li>G·ª≠i s·∫£n ph·∫©m v·ªÅ trung t√¢m b·∫£o h√†nh</li>
          <li>Nh·∫≠n s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c b·∫£o h√†nh trong v√≤ng 7-15 ng√†y</li>
        </ol>

        <h3>4. C√°c tr∆∞·ªùng h·ª£p kh√¥ng ƒë∆∞·ª£c b·∫£o h√†nh</h3>
        <ul>
          <li>S·∫£n ph·∫©m b·ªã h∆∞ h·ªèng do va ƒë·∫≠p, r∆°i v·ª°, ng·∫≠p n∆∞·ªõc</li>
          <li>S·∫£n ph·∫©m b·ªã can thi·ªáp, s·ª≠a ch·ªØa b·ªüi b√™n th·ª© ba</li>
          <li>Tem b·∫£o h√†nh b·ªã r√°ch, m·ªù ho·∫∑c kh√¥ng c√≤n nguy√™n v·∫πn</li>
          <li>H·∫øt th·ªùi h·∫°n b·∫£o h√†nh</li>
        </ul>
      `,
      summary: 'B·∫£o h√†nh 12-24 th√°ng v·ªõi ƒë·∫ßy ƒë·ªß ch√≠nh s√°ch v√† quy tr√¨nh',
      type: 'WARRANTY',
      slug: 'warranty-policy'
    },
    {
      title: 'H·ªó tr·ª£ k·ªπ thu·∫≠t',
      contentHtml: `
        <h2>D·ªãch v·ª• h·ªó tr·ª£ k·ªπ thu·∫≠t AudioTaiLoc</h2>

        <h3>1. K√™nh h·ªó tr·ª£</h3>
        <ul>
          <li><strong>Hotline:</strong> 1900 XXX XXX (8:00 - 18:00 h√†ng ng√†y)</li>
          <li><strong>Email:</strong> support@audiotailoc.com</li>
          <li><strong>Chat tr·ª±c tuy·∫øn:</strong> Website audiotailoc.com</li>
          <li><strong>Fanpage:</strong> fb.com/audiotailoc</li>
        </ul>

        <h3>2. Ph·∫°m vi h·ªó tr·ª£</h3>
        <ul>
          <li>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng s·∫£n ph·∫©m</li>
          <li>Gi·∫£i ƒë√°p th·∫Øc m·∫Øc k·ªπ thu·∫≠t</li>
          <li>H·ªó tr·ª£ c√†i ƒë·∫∑t v√† c·∫•u h√¨nh</li>
          <li>T∆∞ v·∫•n gi·∫£i ph√°p √¢m thanh</li>
          <li>H·ªó tr·ª£ b·∫£o h√†nh v√† s·ª≠a ch·ªØa</li>
        </ul>

        <h3>3. D·ªãch v·ª• k·ªπ thu·∫≠t t·∫°i nh√†</h3>
        <p>Ch√∫ng t√¥i cung c·∫•p d·ªãch v·ª• k·ªπ thu·∫≠t t·∫≠n n∆°i v·ªõi c√°c g√≥i d·ªãch v·ª•:</p>
        <ul>
          <li><strong>G√≥i C∆° b·∫£n:</strong> Ki·ªÉm tra v√† v·ªá sinh thi·∫øt b·ªã - 200.000ƒë</li>
          <li><strong>G√≥i N√¢ng cao:</strong> B·∫£o d∆∞·ª°ng v√† t·ªëi ∆∞u hi·ªáu su·∫•t - 500.000ƒë</li>
          <li><strong>G√≥i To√†n di·ªán:</strong> B·∫£o d∆∞·ª°ng ƒë·ªãnh k·ª≥ 6 th√°ng - 1.200.000ƒë/nƒÉm</li>
        </ul>

        <h3>4. Trung t√¢m b·∫£o h√†nh</h3>
        <p><strong>ƒê·ªãa ch·ªâ:</strong> 123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM</p>
        <p><strong>Gi·ªù l√†m vi·ªác:</strong> 8:00 - 17:00 t·ª´ th·ª© 2 ƒë·∫øn th·ª© 7</p>

        <h3>5. Cam k·∫øt ch·∫•t l∆∞·ª£ng</h3>
        <ul>
          <li>Ph·∫£n h·ªìi trong v√≤ng 24h</li>
          <li>Gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ trong th·ªùi gian ng·∫Øn nh·∫•t</li>
          <li>ƒê·ªôi ng≈© k·ªπ thu·∫≠t chuy√™n nghi·ªáp, ƒë∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n</li>
          <li>S·ª≠ d·ª•ng linh ki·ªán ch√≠nh h√£ng</li>
        </ul>
      `,
      summary: 'H·ªó tr·ª£ k·ªπ thu·∫≠t chuy√™n nghi·ªáp qua nhi·ªÅu k√™nh v·ªõi ƒë·ªôi ng≈© gi√†u kinh nghi·ªám',
      type: 'SUPPORT',
      slug: 'support-policy'
    }
  ];

  for (const policy of policiesData) {
    try {
      await prisma.policies.create({
        data: {
          id: crypto.randomUUID(),
          slug: policy.slug,
          title: policy.title,
          contentHtml: policy.contentHtml,
          summary: policy.summary,
          type: policy.type,
          isPublished: true,
          updatedAt: new Date(),
        }
      });
      console.log(`‚úÖ Created policy: ${policy.title}`);
    } catch (error) {
      console.error(`‚ùå Error creating policy ${policy.title}:`, error);
    }
  }

  console.log('üéâ Policies seeding completed!');
}

async function main() {
  try {
    await seedPolicies();
  } catch (error) {
    console.error('Error seeding policies:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

main();
