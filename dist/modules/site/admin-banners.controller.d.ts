/// <reference types="multer" />
import { BannersService } from './banners.service';
import { CreateBannerDto } from './dto/banner-create.dto';
import { UpdateBannerDto } from './dto/banner-update.dto';
import { FilesService } from '../files/files.service';
export declare class AdminBannersController {
    private readonly bannersService;
    private readonly filesService;
    constructor(bannersService: BannersService, filesService: FilesService);
    findAll(page?: string, search?: string, skip?: string, take?: string): Promise<{
        items: {
            description: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            page: string;
            title: string;
            imageUrl: string;
            isActive: boolean;
            isDeleted: boolean;
            subtitle: string;
            mobileImageUrl: string;
            linkUrl: string;
            buttonLabel: string;
            locale: string;
            position: number;
            startAt: Date;
            endAt: Date;
        }[];
        total: number;
        page: number;
        pageSize: number;
        totalPages: number;
    }>;
    findOne(id: string): Promise<{
        description: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        page: string;
        title: string;
        imageUrl: string;
        isActive: boolean;
        isDeleted: boolean;
        subtitle: string;
        mobileImageUrl: string;
        linkUrl: string;
        buttonLabel: string;
        locale: string;
        position: number;
        startAt: Date;
        endAt: Date;
    }>;
    create(data: CreateBannerDto): Promise<{
        description: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        page: string;
        title: string;
        imageUrl: string;
        isActive: boolean;
        isDeleted: boolean;
        subtitle: string;
        mobileImageUrl: string;
        linkUrl: string;
        buttonLabel: string;
        locale: string;
        position: number;
        startAt: Date;
        endAt: Date;
    }>;
    update(id: string, data: UpdateBannerDto): Promise<{
        description: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        page: string;
        title: string;
        imageUrl: string;
        isActive: boolean;
        isDeleted: boolean;
        subtitle: string;
        mobileImageUrl: string;
        linkUrl: string;
        buttonLabel: string;
        locale: string;
        position: number;
        startAt: Date;
        endAt: Date;
    }>;
    remove(id: string): Promise<{
        description: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        page: string;
        title: string;
        imageUrl: string;
        isActive: boolean;
        isDeleted: boolean;
        subtitle: string;
        mobileImageUrl: string;
        linkUrl: string;
        buttonLabel: string;
        locale: string;
        position: number;
        startAt: Date;
        endAt: Date;
    }>;
    reorder(data: {
        ids: string[];
    }): Promise<{
        description: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        page: string;
        title: string;
        imageUrl: string;
        isActive: boolean;
        isDeleted: boolean;
        subtitle: string;
        mobileImageUrl: string;
        linkUrl: string;
        buttonLabel: string;
        locale: string;
        position: number;
        startAt: Date;
        endAt: Date;
    }[]>;
    uploadBannerImage(bannerId: string, file: Express.Multer.File): Promise<import("../files/files.service").FileUploadResult>;
    uploadBannerMobileImage(bannerId: string, file: Express.Multer.File): Promise<import("../files/files.service").FileUploadResult>;
}
