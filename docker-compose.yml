version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: audiotailoc-postgres
    environment:
      POSTGRES_DB: audiotailoc
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: audiotailoc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MeiliSearch (Search Engine) - Temporarily disabled
  # meilisearch:
  #   image: getmeili/meilisearch:v1.8
  #   container_name: audiotailoc-meilisearch
  #   environment:
  #     MEILI_MASTER_KEY: masterKey
  #     MEILI_NO_ANALYTICS: "true"
  #   ports:
  #     - "7700:7700"
  #   volumes:
  #     - meilisearch_data:/meili_data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: audiotailoc-backend
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - JWT_ACCESS_SECRET=dev-jwt-access-secret-key
      - JWT_REFRESH_SECRET=dev-jwt-refresh-secret-key
      - SESSION_SECRET=dev-session-secret-key
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002
      - FRONTEND_URL=http://localhost:3000
      - DASHBOARD_URL=http://localhost:3001
      - ADMIN_URL=http://localhost:3002
    ports:
      - "3010:3010"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: audiotailoc-frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:3010/api/v1
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.dev
    container_name: audiotailoc-dashboard
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:3010/api/v1
      - NEXT_PUBLIC_DASHBOARD_URL=http://localhost:3001
    ports:
      - "3001:3001"
    depends_on:
      - backend
    volumes:
      - ./dashboard:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  # meilisearch_data:
