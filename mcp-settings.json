{
  "mcpServers": {
    "MCP_DOCKER": {
      "command": "docker",
      "args": [
        "mcp",
        "gateway",
        "run"
      ],
      "type": "stdio"
    },
    "playwright": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/playwright-mcp-server"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "imagesorcery": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "imagesorcery-mcp==latest"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "markitdown": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "markitdown-mcp"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "microsoft-docs": {
      "type": "http",
      "url": "https://learn.microsoft.com/api/mcp",
      "gallery": true,
      "version": "0.0.1"
    },
    "deepwiki": {
      "type": "http",
      "url": "https://mcp.deepwiki.com/sse",
      "gallery": true,
      "version": "0.0.1"
    },
    "sentry": {
      "type": "http",
      "url": "https://mcp.sentry.dev/mcp",
      "gallery": true,
      "version": "0.0.1"
    },
    "memory": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory@latest"
      ],
      "env": {
        "MEMORY_FILE_PATH": "${input:memory_file_path}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "prisma-postgres": {
      "type": "http",
      "url": "https://mcp.prisma.io/mcp",
      "gallery": true,
      "version": "0.0.1"
    },
    "github": {
      "type": "http",
      "url": "https://api.githubcopilot.com/mcp/",
      "gallery": true,
      "version": "0.0.1"
    },
    "shadcn": {
      "command": "npx",
      "args": ["shadcn@latest", "mcp"],
      "type": "stdio"
    },
    "filesystem": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem@latest",
        "/Users/macbook/Desktop/Code/audiotailoc"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "git": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-git@latest"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "sqlite": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sqlite@latest",
        "--db-path",
        "/Users/macbook/Desktop/Code/audiotailoc/data/dev.db"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "postgres": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres@latest",
        "postgresql://postgres:postgres@localhost:5432/audiotailoc"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "redis": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-redis@latest",
        "redis://localhost:6379"
      ],
      "gallery": true,
      "version": "0.0.1"
    },
    "slack": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-slack@latest"
      ],
      "env": {
        "SLACK_BOT_TOKEN": "${input:slack_bot_token}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "notion": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-notion@latest"
      ],
      "env": {
        "NOTION_TOKEN": "${input:notion_token}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "figma": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-figma@latest"
      ],
      "env": {
        "FIGMA_ACCESS_TOKEN": "${input:figma_access_token}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "linear": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-linear@latest"
      ],
      "env": {
        "LINEAR_API_KEY": "${input:linear_api_key}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "weather": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-weather@latest"
      ],
      "env": {
        "WEATHER_API_KEY": "${input:weather_api_key}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "spotify": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-spotify@latest"
      ],
      "env": {
        "SPOTIFY_CLIENT_ID": "${input:spotify_client_id}",
        "SPOTIFY_CLIENT_SECRET": "${input:spotify_client_secret}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "youtube": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-youtube@latest"
      ],
      "env": {
        "YOUTUBE_API_KEY": "${input:youtube_api_key}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "gmail": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gmail@latest"
      ],
      "env": {
        "GMAIL_CREDENTIALS_PATH": "${input:gmail_credentials_path}"
      },
      "gallery": true,
      "version": "0.0.1"
    },
    "everything": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-everything@latest",
        "/Users/macbook/Desktop/Code/audiotailoc",
        "--allowed-command",
        "git",
        "--allowed-command",
        "npm",
        "--allowed-command",
        "node",
        "--allowed-command",
        "python3",
        "--allowed-command",
        "curl",
        "--allowed-command",
        "docker"
      ],
      "gallery": true,
      "version": "0.0.1"
    }
  },
  "inputs": [
    {
      "id": "memory_file_path",
      "type": "promptString",
      "description": "Path to the memory storage file",
      "password": false,
      "default": "/Users/macbook/Desktop/Code/audiotailoc/mcp-memory/default.json"
    },
    {
      "id": "slack_bot_token",
      "type": "promptString",
      "description": "Slack Bot Token for Slack integration",
      "password": true
    },
    {
      "id": "notion_token",
      "type": "promptString",
      "description": "Notion API Token for Notion integration",
      "password": true
    },
    {
      "id": "figma_access_token",
      "type": "promptString",
      "description": "Figma Access Token for Figma integration",
      "password": true
    },
    {
      "id": "linear_api_key",
      "type": "promptString",
      "description": "Linear API Key for Linear integration",
      "password": true
    },
    {
      "id": "weather_api_key",
      "type": "promptString",
      "description": "Weather API Key for weather data",
      "password": true
    },
    {
      "id": "spotify_client_id",
      "type": "promptString",
      "description": "Spotify Client ID",
      "password": true
    },
    {
      "id": "spotify_client_secret",
      "type": "promptString",
      "description": "Spotify Client Secret",
      "password": true
    },
    {
      "id": "youtube_api_key",
      "type": "promptString",
      "description": "YouTube API Key",
      "password": true
    },
    {
      "id": "gmail_credentials_path",
      "type": "promptString",
      "description": "Path to Gmail credentials JSON file",
      "password": false
    }
  ]
}