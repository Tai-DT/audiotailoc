import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting database seeding...');

  // Create admin user
  const adminPassword = await bcrypt.hash('Admin123!', 10);
  const admin = await prisma.user.upsert({
    where: { email: 'admin@audiotailoc.com' },
    update: {},
    create: {
      email: 'admin@audiotailoc.com',
      password: adminPassword,
      name: 'Admin User',
      role: 'ADMIN',
      emailVerified: true,
      phone: '+84123456789',
      phoneVerified: true,
    },
  });

  // Create test customer
  const customerPassword = await bcrypt.hash('Customer123!', 10);
  const customer = await prisma.user.upsert({
    where: { email: 'customer@test.com' },
    update: {},
    create: {
      email: 'customer@test.com',
      password: customerPassword,
      name: 'Test Customer',
      role: 'CUSTOMER',
      emailVerified: true,
      phone: '+84987654321',
      phoneVerified: true,
    },
  });

  // Create categories
  const categories = await Promise.all([
    prisma.category.upsert({
      where: { slug: 'tai-nghe' },
      update: {},
      create: {
        name: 'Tai nghe',
        slug: 'tai-nghe',
        description: 'Tai nghe ch·∫•t l∆∞·ª£ng cao cho m·ªçi nhu c·∫ßu',
        image: '/images/categories/headphones.jpg',
        featured: true,
        seoTitle: 'Tai nghe ch·∫•t l∆∞·ª£ng cao - Audio T√†i L·ªôc',
        seoDescription: 'Kh√°m ph√° b·ªô s∆∞u t·∫≠p tai nghe ch·∫•t l∆∞·ª£ng cao v·ªõi √¢m thanh tuy·ªát v·ªùi',
      },
    }),
    prisma.category.upsert({
      where: { slug: 'loa' },
      update: {},
      create: {
        name: 'Loa',
        slug: 'loa',
        description: 'Loa bluetooth v√† loa c√≥ d√¢y ch·∫•t l∆∞·ª£ng',
        image: '/images/categories/speakers.jpg',
        featured: true,
        seoTitle: 'Loa bluetooth v√† loa c√≥ d√¢y - Audio T√†i L·ªôc',
        seoDescription: 'Tuy·ªÉn ch·ªçn c√°c d√≤ng loa ch·∫•t l∆∞·ª£ng v·ªõi √¢m thanh s·ªëng ƒë·ªông',
      },
    }),
    prisma.category.upsert({
      where: { slug: 'micro' },
      update: {},
      create: {
        name: 'Micro',
        slug: 'micro',
        description: 'Micro thu √¢m chuy√™n nghi·ªáp',
        image: '/images/categories/microphones.jpg',
        featured: true,
        seoTitle: 'Micro thu √¢m chuy√™n nghi·ªáp - Audio T√†i L·ªôc',
        seoDescription: 'Micro ch·∫•t l∆∞·ª£ng cao cho thu √¢m, livestream v√† karaoke',
      },
    }),
    prisma.category.upsert({
      where: { slug: 'phu-kien' },
      update: {},
      create: {
        name: 'Ph·ª• ki·ªán',
        slug: 'phu-kien',
        description: 'Ph·ª• ki·ªán √¢m thanh ƒëa d·∫°ng',
        image: '/images/categories/accessories.jpg',
        featured: false,
        seoTitle: 'Ph·ª• ki·ªán √¢m thanh - Audio T√†i L·ªôc',
        seoDescription: 'Ph·ª• ki·ªán √¢m thanh ch·∫•t l∆∞·ª£ng cho thi·∫øt b·ªã c·ªßa b·∫°n',
      },
    }),
  ]);

  // Create brands
  const brands = await Promise.all([
    prisma.brand.upsert({
      where: { slug: 'sony' },
      update: {},
      create: {
        name: 'Sony',
        slug: 'sony',
        description: 'Th∆∞∆°ng hi·ªáu √¢m thanh h√†ng ƒë·∫ßu th·∫ø gi·ªõi',
        logo: '/images/brands/sony.png',
        website: 'https://www.sony.com',
      },
    }),
    prisma.brand.upsert({
      where: { slug: 'jbl' },
      update: {},
      create: {
        name: 'JBL',
        slug: 'jbl',
        description: 'Chuy√™n gia v·ªÅ loa v√† tai nghe',
        logo: '/images/brands/jbl.png',
        website: 'https://www.jbl.com',
      },
    }),
    prisma.brand.upsert({
      where: { slug: 'audio-technica' },
      update: {},
      create: {
        name: 'Audio-Technica',
        slug: 'audio-technica',
        description: 'Thi·∫øt b·ªã √¢m thanh chuy√™n nghi·ªáp',
        logo: '/images/brands/audio-technica.png',
        website: 'https://www.audio-technica.com',
      },
    }),
  ]);

  // Create products
  const products = await Promise.all([
    prisma.product.upsert({
      where: { slug: 'sony-wh-1000xm4' },
      update: {},
      create: {
        name: 'Sony WH-1000XM4',
        slug: 'sony-wh-1000xm4',
        description: 'Tai nghe ch·ªëng ·ªìn h√†ng ƒë·∫ßu v·ªõi ch·∫•t l∆∞·ª£ng √¢m thanh tuy·ªát v·ªùi',
        shortDescription: 'Tai nghe ch·ªëng ·ªìn Sony WH-1000XM4 v·ªõi c√¥ng ngh·ªá AI',
        sku: 'SONY-WH1000XM4-001',
        priceCents: 799000000, // 7,990,000 VND
        originalPriceCents: 899000000, // 8,990,000 VND
        costCents: 600000000, // 6,000,000 VND
        categoryId: categories[0].id,
        brandId: brands[0].id,
        inStock: true,
        stockQuantity: 50,
        lowStockThreshold: 10,
        weight: 254,
        dimensions: '25.4 x 22.0 x 8.0 cm',
        images: [
          '/images/products/sony-wh-1000xm4-1.jpg',
          '/images/products/sony-wh-1000xm4-2.jpg',
          '/images/products/sony-wh-1000xm4-3.jpg',
        ],
        featured: true,
        published: true,
        seoTitle: 'Sony WH-1000XM4 - Tai nghe ch·ªëng ·ªìn t·ªët nh·∫•t',
        seoDescription: 'Tai nghe Sony WH-1000XM4 v·ªõi c√¥ng ngh·ªá ch·ªëng ·ªìn AI, √¢m thanh Hi-Res v√† pin 30 gi·ªù',
        specifications: {
          'Lo·∫°i tai nghe': 'Over-ear, kh√¥ng d√¢y',
          'C√¥ng ngh·ªá ch·ªëng ·ªìn': 'Active Noise Cancelling v·ªõi AI',
          'Driver': '40mm',
          'T·∫ßn s·ªë': '4Hz - 40kHz',
          'Th·ªùi l∆∞·ª£ng pin': '30 gi·ªù (ANC b·∫≠t), 38 gi·ªù (ANC t·∫Øt)',
          'K·∫øt n·ªëi': 'Bluetooth 5.0, NFC, Jack 3.5mm',
          'Codec h·ªó tr·ª£': 'SBC, AAC, LDAC',
          'Tr·ªçng l∆∞·ª£ng': '254g',
          'M√†u s·∫Øc': 'ƒêen, B·∫°c',
        },
        features: [
          'C√¥ng ngh·ªá ch·ªëng ·ªìn AI th√≠ch ·ª©ng',
          '√Çm thanh Hi-Res Audio',
          'Pin 30 gi·ªù s·ª≠ d·ª•ng',
          'S·∫°c nhanh 10 ph√∫t cho 5 gi·ªù nghe',
          'ƒêi·ªÅu khi·ªÉn c·∫£m ·ª©ng th√¥ng minh',
          'H·ªó tr·ª£ Google Assistant v√† Alexa',
        ],
      },
    }),
    prisma.product.upsert({
      where: { slug: 'jbl-charge-5' },
      update: {},
      create: {
        name: 'JBL Charge 5',
        slug: 'jbl-charge-5',
        description: 'Loa bluetooth di ƒë·ªông v·ªõi √¢m bass m·∫°nh m·∫Ω v√† kh·∫£ nƒÉng ch·ªëng n∆∞·ªõc IP67',
        shortDescription: 'Loa bluetooth JBL Charge 5 ch·ªëng n∆∞·ªõc, pin 20 gi·ªù',
        sku: 'JBL-CHARGE5-001',
        priceCents: 399000000, // 3,990,000 VND
        originalPriceCents: 449000000, // 4,490,000 VND
        costCents: 300000000, // 3,000,000 VND
        categoryId: categories[1].id,
        brandId: brands[1].id,
        inStock: true,
        stockQuantity: 30,
        lowStockThreshold: 5,
        weight: 960,
        dimensions: '22.0 x 9.6 x 9.3 cm',
        images: [
          '/images/products/jbl-charge-5-1.jpg',
          '/images/products/jbl-charge-5-2.jpg',
          '/images/products/jbl-charge-5-3.jpg',
        ],
        featured: true,
        published: true,
        seoTitle: 'JBL Charge 5 - Loa bluetooth ch·ªëng n∆∞·ªõc t·ªët nh·∫•t',
        seoDescription: 'Loa JBL Charge 5 v·ªõi √¢m bass m·∫°nh m·∫Ω, ch·ªëng n∆∞·ªõc IP67 v√† pin 20 gi·ªù',
        specifications: {
          'Lo·∫°i loa': 'Bluetooth di ƒë·ªông',
          'C√¥ng su·∫•t': '30W RMS',
          'Driver': '1 x Woofer, 2 x Tweeter',
          'T·∫ßn s·ªë': '65Hz - 20kHz',
          'Th·ªùi l∆∞·ª£ng pin': '20 gi·ªù',
          'K·∫øt n·ªëi': 'Bluetooth 5.1, USB-C',
          'Ch·ªëng n∆∞·ªõc': 'IP67',
          'Tr·ªçng l∆∞·ª£ng': '960g',
          'M√†u s·∫Øc': 'ƒêen, Xanh, ƒê·ªè, X√°m',
        },
        features: [
          '√Çm bass JBL Pro Sound m·∫°nh m·∫Ω',
          'Ch·ªëng n∆∞·ªõc v√† b·ª•i IP67',
          'Pin 20 gi·ªù s·ª≠ d·ª•ng li√™n t·ª•c',
          'S·∫°c cho thi·∫øt b·ªã kh√°c qua USB',
          'K·∫øt n·ªëi nhi·ªÅu loa JBL PartyBoost',
          'Thi·∫øt k·∫ø b·ªÅn b·ªâ, di ƒë·ªông',
        ],
      },
    }),
    prisma.product.upsert({
      where: { slug: 'audio-technica-at2020' },
      update: {},
      create: {
        name: 'Audio-Technica AT2020',
        slug: 'audio-technica-at2020',
        description: 'Micro condenser chuy√™n nghi·ªáp cho studio v√† livestream',
        shortDescription: 'Micro condenser Audio-Technica AT2020 chuy√™n nghi·ªáp',
        sku: 'AT-AT2020-001',
        priceCents: 299000000, // 2,990,000 VND
        originalPriceCents: 329000000, // 3,290,000 VND
        costCents: 220000000, // 2,200,000 VND
        categoryId: categories[2].id,
        brandId: brands[2].id,
        inStock: true,
        stockQuantity: 20,
        lowStockThreshold: 5,
        weight: 345,
        dimensions: '16.2 x 5.2 x 5.2 cm',
        images: [
          '/images/products/audio-technica-at2020-1.jpg',
          '/images/products/audio-technica-at2020-2.jpg',
        ],
        featured: false,
        published: true,
        seoTitle: 'Audio-Technica AT2020 - Micro condenser chuy√™n nghi·ªáp',
        seoDescription: 'Micro AT2020 v·ªõi ch·∫•t l∆∞·ª£ng studio, ph√π h·ª£p cho thu √¢m v√† livestream chuy√™n nghi·ªáp',
        specifications: {
          'Lo·∫°i micro': 'Condenser',
          'Polar pattern': 'Cardioid',
          'T·∫ßn s·ªë': '20Hz - 20kHz',
          'ƒê·ªô nh·∫°y': '-37 dBV/Pa',
          'SPL t·ªëi ƒëa': '144 dB',
          'K·∫øt n·ªëi': 'XLR 3-pin',
          'Ngu·ªìn': 'Phantom power 48V',
          'Tr·ªçng l∆∞·ª£ng': '345g',
        },
        features: [
          'Ch·∫•t l∆∞·ª£ng √¢m thanh studio',
          'Polar pattern cardioid ch·ªëng nhi·ªÖu',
          'T·∫ßn s·ªë ph·∫£n h·ªìi r·ªông 20Hz-20kHz',
          'Thi·∫øt k·∫ø b·ªÅn b·ªâ, chuy√™n nghi·ªáp',
          'Ph√π h·ª£p thu √¢m, livestream, podcast',
          'T∆∞∆°ng th√≠ch v·ªõi m·ªçi audio interface',
        ],
      },
    }),
  ]);

  // Create product tags
  const tags = await Promise.all([
    prisma.tag.upsert({
      where: { name: 'Ch·ªëng ·ªìn' },
      update: {},
      create: { name: 'Ch·ªëng ·ªìn', slug: 'chong-on' },
    }),
    prisma.tag.upsert({
      where: { name: 'Bluetooth' },
      update: {},
      create: { name: 'Bluetooth', slug: 'bluetooth' },
    }),
    prisma.tag.upsert({
      where: { name: 'Ch·ªëng n∆∞·ªõc' },
      update: {},
      create: { name: 'Ch·ªëng n∆∞·ªõc', slug: 'chong-nuoc' },
    }),
    prisma.tag.upsert({
      where: { name: 'Chuy√™n nghi·ªáp' },
      update: {},
      create: { name: 'Chuy√™n nghi·ªáp', slug: 'chuyen-nghiep' },
    }),
    prisma.tag.upsert({
      where: { name: 'Hi-Res' },
      update: {},
      create: { name: 'Hi-Res', slug: 'hi-res' },
    }),
  ]);

  // Connect products with tags
  await Promise.all([
    prisma.product.update({
      where: { id: products[0].id },
      data: {
        tags: {
          connect: [
            { id: tags[0].id }, // Ch·ªëng ·ªìn
            { id: tags[1].id }, // Bluetooth
            { id: tags[4].id }, // Hi-Res
          ],
        },
      },
    }),
    prisma.product.update({
      where: { id: products[1].id },
      data: {
        tags: {
          connect: [
            { id: tags[1].id }, // Bluetooth
            { id: tags[2].id }, // Ch·ªëng n∆∞·ªõc
          ],
        },
      },
    }),
    prisma.product.update({
      where: { id: products[2].id },
      data: {
        tags: {
          connect: [
            { id: tags[3].id }, // Chuy√™n nghi·ªáp
          ],
        },
      },
    }),
  ]);

  // Create shipping zones
  const shippingZones = await Promise.all([
    prisma.shippingZone.upsert({
      where: { name: 'H·ªì Ch√≠ Minh' },
      update: {},
      create: {
        name: 'H·ªì Ch√≠ Minh',
        description: 'Khu v·ª±c Th√†nh ph·ªë H·ªì Ch√≠ Minh',
        countries: ['VN'],
        states: ['H·ªì Ch√≠ Minh'],
        postalCodes: ['7*'],
      },
    }),
    prisma.shippingZone.upsert({
      where: { name: 'H√† N·ªôi' },
      update: {},
      create: {
        name: 'H√† N·ªôi',
        description: 'Khu v·ª±c Th·ªß ƒë√¥ H√† N·ªôi',
        countries: ['VN'],
        states: ['H√† N·ªôi'],
        postalCodes: ['1*'],
      },
    }),
    prisma.shippingZone.upsert({
      where: { name: 'To√†n qu·ªëc' },
      update: {},
      create: {
        name: 'To√†n qu·ªëc',
        description: 'C√°c t·ªânh th√†nh kh√°c',
        countries: ['VN'],
        states: [],
        postalCodes: [],
      },
    }),
  ]);

  // Create shipping methods
  await Promise.all([
    prisma.shippingMethod.upsert({
      where: { name: 'Giao h√†ng nhanh HCM' },
      update: {},
      create: {
        name: 'Giao h√†ng nhanh HCM',
        description: 'Giao h√†ng trong ng√†y t·∫°i TP.HCM',
        carrier: 'Giao H√†ng Nhanh',
        estimatedDays: 1,
        costCents: 3000000, // 30,000 VND
        freeShippingThreshold: 50000000, // 500,000 VND
        zoneId: shippingZones[0].id,
        isActive: true,
      },
    }),
    prisma.shippingMethod.upsert({
      where: { name: 'Giao h√†ng nhanh HN' },
      update: {},
      create: {
        name: 'Giao h√†ng nhanh HN',
        description: 'Giao h√†ng trong ng√†y t·∫°i H√† N·ªôi',
        carrier: 'Giao H√†ng Nhanh',
        estimatedDays: 1,
        costCents: 3000000, // 30,000 VND
        freeShippingThreshold: 50000000, // 500,000 VND
        zoneId: shippingZones[1].id,
        isActive: true,
      },
    }),
    prisma.shippingMethod.upsert({
      where: { name: 'Giao h√†ng ti√™u chu·∫©n' },
      update: {},
      create: {
        name: 'Giao h√†ng ti√™u chu·∫©n',
        description: 'Giao h√†ng to√†n qu·ªëc 2-3 ng√†y',
        carrier: 'Giao H√†ng Ti·∫øt Ki·ªám',
        estimatedDays: 3,
        costCents: 5000000, // 50,000 VND
        freeShippingThreshold: 100000000, // 1,000,000 VND
        zoneId: shippingZones[2].id,
        isActive: true,
      },
    }),
  ]);

  // Create coupons
  await Promise.all([
    prisma.coupon.upsert({
      where: { code: 'WELCOME10' },
      update: {},
      create: {
        code: 'WELCOME10',
        name: 'Ch√†o m·ª´ng kh√°ch h√†ng m·ªõi',
        description: 'Gi·∫£m 10% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n',
        type: 'PERCENTAGE',
        value: 10,
        minimumAmount: 50000000, // 500,000 VND
        maximumDiscount: 20000000, // 200,000 VND
        usageLimit: 1000,
        usageCount: 0,
        isActive: true,
        startsAt: new Date(),
        expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days
      },
    }),
    prisma.coupon.upsert({
      where: { code: 'FREESHIP' },
      update: {},
      create: {
        code: 'FREESHIP',
        name: 'Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn',
        description: 'Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn cho ƒë∆°n h√†ng t·ª´ 1 tri·ªáu',
        type: 'FREE_SHIPPING',
        value: 0,
        minimumAmount: 100000000, // 1,000,000 VND
        usageLimit: 500,
        usageCount: 0,
        isActive: true,
        startsAt: new Date(),
        expiresAt: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 days
      },
    }),
  ]);

  // Create sample reviews
  await Promise.all([
    prisma.review.create({
      data: {
        productId: products[0].id,
        userId: customer.id,
        rating: 5,
        title: 'Tai nghe tuy·ªát v·ªùi!',
        content: 'Ch·∫•t l∆∞·ª£ng √¢m thanh r·∫•t t·ªët, ch·ªëng ·ªìn hi·ªáu qu·∫£. R·∫•t h√†i l√≤ng v·ªõi s·∫£n ph·∫©m.',
        verified: true,
        helpful: 15,
        notHelpful: 1,
      },
    }),
    prisma.review.create({
      data: {
        productId: products[1].id,
        userId: customer.id,
        rating: 4,
        title: 'Loa bass m·∫°nh',
        content: '√Çm bass r·∫•t m·∫°nh, ch·ªëng n∆∞·ªõc t·ªët. Pin h∆°i y·∫øu so v·ªõi qu·∫£ng c√°o.',
        verified: true,
        helpful: 8,
        notHelpful: 2,
      },
    }),
  ]);

  // Create FAQ entries
  await Promise.all([
    prisma.fAQ.create({
      data: {
        question: 'L√†m th·∫ø n√†o ƒë·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m?',
        answer: 'B·∫°n c√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m trong v√≤ng 7 ng√†y k·ªÉ t·ª´ ng√†y nh·∫≠n h√†ng. S·∫£n ph·∫©m ph·∫£i c√≤n nguy√™n v·∫πn, ch∆∞a s·ª≠ d·ª•ng v√† c√≥ ƒë·∫ßy ƒë·ªß h√≥a ƒë∆°n.',
        category: 'ƒê·ªïi tr·∫£',
        isPublished: true,
        order: 1,
      },
    }),
    prisma.fAQ.create({
      data: {
        question: 'Th·ªùi gian giao h√†ng l√† bao l√¢u?',
        answer: 'Th·ªùi gian giao h√†ng t√πy thu·ªôc v√†o khu v·ª±c: TP.HCM v√† H√† N·ªôi trong ng√†y, c√°c t·ªânh kh√°c 2-3 ng√†y l√†m vi·ªác.',
        category: 'Giao h√†ng',
        isPublished: true,
        order: 2,
      },
    }),
    prisma.fAQ.create({
      data: {
        question: 'C√≥ h·ªó tr·ª£ b·∫£o h√†nh kh√¥ng?',
        answer: 'T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu ƒë∆∞·ª£c b·∫£o h√†nh ch√≠nh h√£ng. Th·ªùi gian b·∫£o h√†nh t√πy theo t·ª´ng s·∫£n ph·∫©m, th∆∞·ªùng t·ª´ 12-24 th√°ng.',
        category: 'B·∫£o h√†nh',
        isPublished: true,
        order: 3,
      },
    }),
  ]);

  console.log('‚úÖ Database seeding completed successfully!');
  console.log(`üë§ Admin user: admin@audiotailoc.com / Admin123!`);
  console.log(`üë§ Test customer: customer@test.com / Customer123!`);
  console.log(`üì¶ Created ${products.length} products`);
  console.log(`üè∑Ô∏è Created ${categories.length} categories`);
  console.log(`üè¢ Created ${brands.length} brands`);
  console.log(`üé´ Created 2 coupons`);
  console.log(`üöö Created 3 shipping methods`);
  console.log(`‚≠ê Created 2 sample reviews`);
  console.log(`‚ùì Created 3 FAQ entries`);
}

main()
  .catch((e) => {
    console.error('‚ùå Error during seeding:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
