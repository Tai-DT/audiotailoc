import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function seedAllData() {
  console.log('üå± Seeding all sample data...');

  // 1. Create categories
  console.log('üìÇ Creating categories...');
  const categories = [
    // Product categories
    { name: 'D√†n Karaoke', slug: 'dang-karaoke', isActive: true },
    { name: 'ƒê·∫ßu Karaoke', slug: 'dau-karaoke', isActive: true },
    { name: 'Loa & Loa Sub', slug: 'loa-loa-sub', isActive: true },
    { name: 'Micro Phone', slug: 'micro-phone', isActive: true },
    { name: 'Mixer / Vang S·ªë', slug: 'mixer-vang-so', isActive: true },
    { name: 'M√†n H√¨nh Ch·ªçn B√†i', slug: 'man-hinh-chon-bai', isActive: true },
    { name: 'Thanh L√Ω', slug: 'thanh-ly', isActive: true },
  ];

  for (const cat of categories) {
    await prisma.category.upsert({
      where: { slug: cat.slug },
      update: cat,
      create: cat,
    });
  }
  console.log('‚úÖ Categories created');

  // 2. Create products
  console.log('üì¶ Creating products...');
  const products = [
    // D√†n Karaoke
    {
      name: 'D√†n Karaoke Gia ƒê√¨nh 5.1 Premium',
      slug: 'dan-karaoke-gia-dinh-5-1-premium',
      description: 'D√†n karaoke gia ƒë√¨nh 5.1 k√™nh v·ªõi √¢m thanh s·ªëng ƒë·ªông, ph√π h·ª£p cho gia ƒë√¨nh v√† ti·ªác nh·ªè.',
      priceCents: 18990000, // 18,990,000 VND
      categorySlug: 'dang-karaoke',
      featured: true,
      imageUrl: '/images/products/karaoke-5-1-family.jpg',
    },
    {
      name: 'D√†n Karaoke Chuy√™n Nghi·ªáp 7.1',
      slug: 'dan-karaoke-chuyen-nghiep-7-1',
      description: 'D√†n karaoke chuy√™n nghi·ªáp 7.1 k√™nh cho qu√°n karaoke, h·ªôi tr∆∞·ªùng.',
      priceCents: 29990000, // 29,990,000 VND
      categorySlug: 'dang-karaoke',
      featured: true,
      imageUrl: '/images/products/karaoke-7-1-pro.jpg',
    },

    // ƒê·∫ßu Karaoke
    {
      name: 'ƒê·∫ßu Karaoke 100.000 B√†i H√°t HD',
      slug: 'dau-karaoke-100000-bai-hat-hd',
      description: 'ƒê·∫ßu karaoke v·ªõi 100.000 b√†i h√°t Vi·ªát Nam v√† Qu·ªëc t·∫ø.',
      priceCents: 12990000, // 12,990,000 VND
      categorySlug: 'dau-karaoke',
      featured: true,
      imageUrl: '/images/products/karaoke-player-100k.jpg',
    },
    {
      name: 'ƒê·∫ßu Karaoke 50.000 B√†i H√°t',
      slug: 'dau-karaoke-50000-bai-hat',
      description: 'ƒê·∫ßu karaoke v·ªõi 50.000 b√†i h√°t ch·∫•t l∆∞·ª£ng cao.',
      priceCents: 8990000, // 8,990,000 VND
      categorySlug: 'dau-karaoke',
      featured: false,
      imageUrl: '/images/products/karaoke-player-50k.jpg',
    },

    // Loa & Loa Sub
    {
      name: 'B·ªô Loa Karaoke 500W + Subwoofer 300W',
      slug: 'bo-loa-karaoke-500w-subwoofer-300w',
      description: 'B·ªô loa karaoke chuy√™n d·ª•ng v·ªõi loa ch√≠nh 500W v√† loa subwoofer 300W.',
      priceCents: 7990000, // 7,990,000 VND
      categorySlug: 'loa-loa-sub',
      featured: true,
      imageUrl: '/images/products/karaoke-speakers-500w.jpg',
    },
    {
      name: 'Loa Karaoke 300W',
      slug: 'loa-karaoke-300w',
      description: 'Loa karaoke 300W ch·∫•t l∆∞·ª£ng cao.',
      priceCents: 4990000, // 4,990,000 VND
      categorySlug: 'loa-loa-sub',
      featured: false,
      imageUrl: '/images/products/karaoke-speakers-300w.jpg',
    },

    // Micro Phone
    {
      name: 'Micro Karaoke Kh√¥ng D√¢y 2.4G Dual',
      slug: 'micro-karaoke-khong-day-2-4g-dual',
      description: 'Micro karaoke kh√¥ng d√¢y 2.4G dual v·ªõi t·∫ßm ho·∫°t ƒë·ªông 50m.',
      priceCents: 3990000, // 3,990,000 VND
      categorySlug: 'micro-phone',
      featured: true,
      imageUrl: '/images/products/micro-wireless-2-4g.jpg',
    },
    {
      name: 'Micro Karaoke C√≥ D√¢y',
      slug: 'micro-karaoke-co-day',
      description: 'Micro karaoke c√≥ d√¢y ch·∫•t l∆∞·ª£ng cao.',
      priceCents: 1990000, // 1,990,000 VND
      categorySlug: 'micro-phone',
      featured: false,
      imageUrl: '/images/products/micro-wired.jpg',
    },

    // Mixer / Vang S·ªë
    {
      name: 'Mixer Karaoke 8 K√™nh + Vang S·ªë Pro',
      slug: 'mixer-karaoke-8-kenh-vang-so-pro',
      description: 'Mixer karaoke 8 k√™nh chuy√™n nghi·ªáp v·ªõi vang s·ªë DSP.',
      priceCents: 5990000, // 5,990,000 VND
      categorySlug: 'mixer-vang-so',
      featured: true,
      imageUrl: '/images/products/mixer-8ch-pro.jpg',
    },
    {
      name: 'Vang S·ªë Karaoke 4 K√™nh',
      slug: 'vang-so-karaoke-4-kenh',
      description: 'Vang s·ªë karaoke 4 k√™nh v·ªõi nhi·ªÅu hi·ªáu ·ª©ng.',
      priceCents: 2990000, // 2,990,000 VND
      categorySlug: 'mixer-vang-so',
      featured: false,
      imageUrl: '/images/products/reverb-4ch.jpg',
    },

    // M√†n H√¨nh Ch·ªçn B√†i
    {
      name: 'M√†n H√¨nh C·∫£m ·ª®ng 15 Inch Ch·ªçn B√†i Karaoke',
      slug: 'man-hinh-cam-ung-15-inch-chon-bai-karaoke',
      description: 'M√†n h√¨nh c·∫£m ·ª©ng 15 inch chuy√™n d·ª•ng cho vi·ªác ch·ªçn b√†i karaoke.',
      priceCents: 8990000, // 8,990,000 VND
      categorySlug: 'man-hinh-chon-bai',
      featured: true,
      imageUrl: '/images/products/touch-screen-15inch.jpg',
    },
    {
      name: 'M√†n H√¨nh Ch·ªçn B√†i 10 Inch',
      slug: 'man-hinh-chon-bai-10-inch',
      description: 'M√†n h√¨nh ch·ªçn b√†i 10 inch v·ªõi giao di·ªán th√¢n thi·ªán.',
      priceCents: 5990000, // 5,990,000 VND
      categorySlug: 'man-hinh-chon-bai',
      featured: false,
      imageUrl: '/images/products/touch-screen-10inch.jpg',
    },

    // Thanh L√Ω
    {
      name: 'D√†n Karaoke Thanh L√Ω - C√≤n M·ªõi 90%',
      slug: 'dan-karaoke-thanh-ly-con-moi-90',
      description: 'D√†n karaoke thanh l√Ω c√≤n m·ªõi 90%, gi√° ∆∞u ƒë√£i.',
      priceCents: 9990000, // 9,990,000 VND
      categorySlug: 'thanh-ly',
      featured: false,
      imageUrl: '/images/products/karaoke-liquidation-90.jpg',
    },
    {
      name: 'ƒê·∫ßu Karaoke Thanh L√Ω',
      slug: 'dau-karaoke-thanh-ly',
      description: 'ƒê·∫ßu karaoke thanh l√Ω v·ªõi nhi·ªÅu b√†i h√°t.',
      priceCents: 4990000, // 4,990,000 VND
      categorySlug: 'thanh-ly',
      featured: false,
      imageUrl: '/images/products/player-liquidation.jpg',
    },
  ];

  for (const prod of products) {
    const category = await prisma.category.findUnique({ where: { slug: prod.categorySlug } });
    if (category) {
      await prisma.product.upsert({
        where: { slug: prod.slug },
        update: {},
        create: {
          name: prod.name,
          slug: prod.slug,
          description: prod.description,
          priceCents: prod.priceCents,
          categoryId: category.id,
          featured: prod.featured,
          imageUrl: prod.imageUrl,
        },
      });
    }
  }
  console.log('‚úÖ Products created');

  // 2.b Ensure each category has at least 10 products (generate synthetic samples)
  console.log('üß© Ensuring each category has at least 10 products...');
  const targetPerCategory = 10;

  const allCategories = await prisma.category.findMany({});
  for (const cat of allCategories) {
    const existingCount = await prisma.product.count({ where: { categoryId: cat.id } });
    const toCreate = Math.max(0, targetPerCategory - existingCount);
    if (toCreate === 0) continue;

    let created = 0;
    let candidateIndex = 1;
    while (created < toCreate) {
      const slug = `${cat.slug}-seed-${candidateIndex}`;
      // ensure slug doesn't exist
      const existing = await prisma.product.findUnique({ where: { slug } });
      if (existing) {
        candidateIndex++;
        continue;
      }

      await prisma.product.create({
        data: {
          name: `${cat.name} M·∫´u ${candidateIndex}`,
          slug,
          description: `S·∫£n ph·∫©m m·∫´u cho danh m·ª•c ${cat.name}`,
          priceCents: 990000 + (candidateIndex * 100000),
          categoryId: cat.id,
          featured: false,
          imageUrl: '/images/products/placeholder.jpg',
        },
      });

      created++;
      candidateIndex++;
    }
  }
  console.log('‚úÖ Category product counts normalized to at least 10');

  // 3. Create services
  console.log('üîß Creating services...');
  const services = [
    {
      name: 'D·ªãch V·ª• Thanh L√Ω Thi·∫øt B·ªã √Çm Thanh',
      slug: 'dich-vu-thanh-ly-thiet-bi-am-thanh',
      description: 'D·ªãch v·ª• thanh l√Ω thi·∫øt b·ªã √¢m thanh c≈©, ƒë·ªïi m·ªõi v·ªõi gi√° t·ªët.',
      basePriceCents: 0, // Contact for pricing
      price: 0,
      duration: 60, // 1 hour
      isActive: true,
      images: '/images/services/liquidation.jpg',
    },
    {
      name: 'D·ªãch V·ª• L·∫Øp ƒê·∫∑t H·ªá Th·ªëng Karaoke',
      slug: 'dich-vu-lap-dat-he-thong-karaoke',
      description: 'L·∫Øp ƒë·∫∑t chuy√™n nghi·ªáp h·ªá th·ªëng karaoke gia ƒë√¨nh v√† qu√°n karaoke.',
      basePriceCents: 5000000, // 5,000,000 VND
      price: 5000000,
      duration: 240, // 4 hours
      isActive: true,
      images: '/images/services/installation.jpg',
    },
    {
      name: 'D·ªãch V·ª• Cho Thu√™ Thi·∫øt B·ªã Karaoke',
      slug: 'dich-vu-cho-thue-thiet-bi-karaoke',
      description: 'Cho thu√™ thi·∫øt b·ªã karaoke cho s·ª± ki·ªán, ti·ªác c∆∞·ªõi, h·ªôi ngh·ªã.',
      basePriceCents: 10000000, // 10,000,000 VND per day
      price: 10000000,
      duration: 480, // 8 hours
      isActive: true,
      images: '/images/services/rental.jpg',
    },
  ];

  for (const svc of services) {
    await prisma.service.upsert({
      where: { slug: svc.slug },
      update: {},
      create: {
        name: svc.name,
        slug: svc.slug,
        description: svc.description,
        basePriceCents: svc.basePriceCents,
        price: svc.price,
        duration: svc.duration,
        isActive: svc.isActive,
        images: svc.images,
      },
    });
  }
  console.log('‚úÖ Services created');

  // 4. Create pages for banner and about
  console.log('üìÑ Creating pages...');
  const pages = [
    {
      slug: 'banner',
      title: 'Banner Trang Ch·ªß',
      content: `
        <div class="hero-banner">
          <h1>Ch√†o M·ª´ng ƒê·∫øn V·ªõi Audio T√†i L·ªôc</h1>
          <p>Chuy√™n cung c·∫•p thi·∫øt b·ªã √¢m thanh karaoke ch·∫•t l∆∞·ª£ng cao</p>
          <div class="banner-features">
            <div class="feature">
              <h3>üé§ Thi·∫øt B·ªã Chuy√™n Nghi·ªáp</h3>
              <p>D√†n karaoke, ƒë·∫ßu karaoke, loa sub ch·∫•t l∆∞·ª£ng cao</p>
            </div>
            <div class="feature">
              <h3>üîß D·ªãch V·ª• T·∫≠n T√¢m</h3>
              <p>L·∫Øp ƒë·∫∑t, b·∫£o tr√¨, cho thu√™ thi·∫øt b·ªã √¢m thanh</p>
            </div>
            <div class="feature">
              <h3>üí∞ Gi√° C·∫£ H·ª£p L√Ω</h3>
              <p>Cam k·∫øt gi√° t·ªët nh·∫•t th·ªã tr∆∞·ªùng</p>
            </div>
          </div>
        </div>
      `,
      isPublished: true,
    },
    {
      slug: 'about',
      title: 'V·ªÅ Ch√∫ng T√¥i',
      content: `
        <div class="about-section">
          <h1>V·ªÅ Audio T√†i L·ªôc</h1>
          <p>Audio T√†i L·ªôc l√† ƒë∆°n v·ªã h√†ng ƒë·∫ßu trong lƒ©nh v·ª±c cung c·∫•p v√† ph√¢n ph·ªëi thi·∫øt b·ªã √¢m thanh karaoke t·∫°i Vi·ªát Nam.</p>

          <h2>L·ªãch S·ª≠ Ph√°t Tri·ªÉn</h2>
          <p>ƒê∆∞·ª£c th√†nh l·∫≠p t·ª´ nƒÉm 2010, Audio T√†i L·ªôc ƒë√£ c√≥ h∆°n 10 nƒÉm kinh nghi·ªám trong ng√†nh √¢m thanh karaoke.</p>

          <h2>S·ª© M·ªánh</h2>
          <p>Mang ƒë·∫øn cho kh√°ch h√†ng nh·ªØng s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao v·ªõi gi√° c·∫£ h·ª£p l√Ω, d·ªãch v·ª• chuy√™n nghi·ªáp v√† t·∫≠n t√¢m.</p>

          <h2>T·∫ßm Nh√¨n</h2>
          <p>Tr·ªü th√†nh nh√† cung c·∫•p thi·∫øt b·ªã √¢m thanh karaoke s·ªë 1 Vi·ªát Nam, m·ªü r·ªông kinh doanh ra khu v·ª±c ƒê√¥ng Nam √Å.</p>

          <h2>Gi√° Tr·ªã C·ªët L√µi</h2>
          <ul>
            <li>Ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m v∆∞·ª£t tr·ªôi</li>
            <li>D·ªãch v·ª• kh√°ch h√†ng chuy√™n nghi·ªáp</li>
            <li>Gi√° c·∫£ c·∫°nh tranh</li>
            <li>B·∫£o h√†nh v√† h·ªó tr·ª£ k·ªπ thu·∫≠t t·∫≠n t√¨nh</li>
          </ul>
        </div>
      `,
      isPublished: true,
    },
  ];

  for (const page of pages) {
    await prisma.page.upsert({
      where: { slug: page.slug },
      update: {},
      create: page,
    });
  }
  console.log('‚úÖ Pages created');

  console.log('üéâ All sample data seeded successfully!');
}

seedAllData()
  .catch((e) => {
    console.error('‚ùå Error:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
