// Simplified Prisma Schema for Audio Tài Lộc (PostgreSQL compatible)
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  phone     String?
  role      String   @default("USER")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders        Order[]
  projects      Project[]
  loyaltyAccount LoyaltyAccount?

  @@map("users")
}

// Category model
model Category {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

// Service Type model
model ServiceType {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  services Service[]

  @@map("service_types")
}

// Service model
model Service {
  id             String   @id @default(cuid())
  slug           String   @unique
  name           String
  description    String?
  shortDescription String?
  minPrice       Float?
  maxPrice       Float?
  priceType      String   @default("FIXED")
  duration       Int      @default(1)
  typeId         String?
  isActive       Boolean  @default(true)
  isFeatured     Boolean  @default(false)
  seoTitle       String?
  seoDescription String?
  type           String   @default("SERVICE")
  tags           String?
  features       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  type           ServiceType? @relation(fields: [typeId], references: [id])

  @@map("services")
}

// Project model
model Project {
  id             String   @id @default(cuid())
  name           String
  slug           String   @unique
  description    String?
  shortDescription String?
  client         String?
  category       String?
  technologies   String?
  features       String?
  images         String?
  thumbnailImage String?
  youtubeVideoId String?
  startDate      DateTime?
  endDate        DateTime?
  duration       String?
  teamSize       Int?
  budget         String?
  status         String   @default("PLANNING")
  isActive       Boolean  @default(true)
  isFeatured     Boolean  @default(false)
  displayOrder   Int      @default(0)
  userId         String?
  tags           String?
  testimonial    String?
  results        String?
  challenges     String?
  solutions      String?
  metaTitle      String?
  metaDescription String?
  content        String?
  projectDate    DateTime?
  completionDate DateTime?
  featured       Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user           User? @relation(fields: [userId], references: [id])

  @@map("projects")
}

// Order model
model Order {
  id             String   @id @default(cuid())
  userId         String
  status         String   @default("PENDING")
  totalAmount    Float
  shippingAddress String?
  billingAddress String?
  notes          String?
  paymentMethod  String?
  paymentStatus  String   @default("PENDING")
  shippingMethod String?
  estimatedDelivery DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user           User @relation(fields: [userId], references: [id])

  @@map("orders")
}

// Banner model
model Banner {
  id             String   @id @default(cuid())
  title          String
  subtitle       String?
  description    String?
  imageUrl       String?
  mobileImageUrl String?
  linkUrl        String?
  buttonLabel    String?
  page           String   @default("home")
  position       Int      @default(1)
  isActive       Boolean  @default(true)
  startAt        DateTime?
  endAt          DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("banners")
}

// System Config model
model SystemConfig {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  type      String   @default("STRING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("system_configs")
}

// Loyalty Account model
model LoyaltyAccount {
  id        String   @id @default(cuid())
  userId    String   @unique
  points    Int      @default(0)
  tier      String   @default("BRONZE")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User @relation(fields: [userId], references: [id])

  @@map("loyalty_accounts")
}

// Page model
model Page {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  content   String?
  isPublished Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("pages")
}