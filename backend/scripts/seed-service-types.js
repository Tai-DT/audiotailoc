const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function seedServiceTypes() {
  try {
    console.log('üå± Seeding service types...');

    const serviceTypes = [
      {
        name: 'Thanh L√Ω',
        slug: 'thanh-ly',
        description: 'D·ªãch v·ª• thanh l√Ω t√†i s·∫£n, thi·∫øt b·ªã c≈©'
      },
      {
        name: 'L·∫Øp ƒë·∫∑t',
        slug: 'lap-dat',
        description: 'D·ªãch v·ª• l·∫Øp ƒë·∫∑t, thi c√¥ng v√† tri·ªÉn khai'
      },
      {
        name: 'Cho thu√™',
        slug: 'cho-thue',
        description: 'D·ªãch v·ª• cho thu√™ thi·∫øt b·ªã, m√°y m√≥c'
      }
    ];

    for (const serviceType of serviceTypes) {
      const existing = await prisma.serviceType.findFirst({
        where: { name: serviceType.name }
      });

      if (!existing) {
        await prisma.serviceType.create({
          data: serviceType
        });
        console.log(`‚úÖ Created service type: ${serviceType.name}`);
      } else {
        console.log(`‚ö†Ô∏è  Service type already exists: ${serviceType.name}`);
      }
    }

    console.log('üéâ Service types seeding completed!');
  } catch (error) {
    console.error('‚ùå Error seeding service types:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedServiceTypes();