import { ProjectsService } from './projects.service';
import { CloudinaryService } from '../files/cloudinary.service';
export declare class ProjectsUploadController {
    private readonly projectsService;
    private readonly cloudinaryService;
    constructor(projectsService: ProjectsService, cloudinaryService: CloudinaryService);
    uploadThumbnail(id: string, file: Express.Multer.File): Promise<{
        success: boolean;
        url: string;
        publicId: string;
        project: {
            user: {
                id: string;
                email: string;
                name: string;
            };
        } & {
            category: string | null;
            client: string | null;
            status: string;
            id: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            tags: string | null;
            description: string | null;
            content: string | null;
            startDate: Date | null;
            endDate: Date | null;
            duration: string | null;
            slug: string;
            shortDescription: string | null;
            images: string | null;
            features: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            metaKeywords: string | null;
            canonicalUrl: string | null;
            featured: boolean;
            isActive: boolean;
            isDeleted: boolean;
            viewCount: number;
            isFeatured: boolean;
            clientLogo: string | null;
            technologies: string | null;
            thumbnailImage: string | null;
            coverImage: string | null;
            youtubeVideoId: string | null;
            youtubeVideoUrl: string | null;
            demoUrl: string | null;
            githubUrl: string | null;
            liveUrl: string | null;
            teamSize: number | null;
            budget: string | null;
            displayOrder: number;
            testimonial: string | null;
            results: string | null;
            challenges: string | null;
            solutions: string | null;
            ogTitle: string | null;
            ogDescription: string | null;
            ogImage: string | null;
            structuredData: string | null;
            galleryImages: string | null;
            clientLogoUrl: string | null;
            projectDate: Date | null;
            completionDate: Date | null;
        };
    }>;
    uploadCover(id: string, file: Express.Multer.File): Promise<{
        success: boolean;
        url: string;
        publicId: string;
        project: {
            user: {
                id: string;
                email: string;
                name: string;
            };
        } & {
            category: string | null;
            client: string | null;
            status: string;
            id: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            tags: string | null;
            description: string | null;
            content: string | null;
            startDate: Date | null;
            endDate: Date | null;
            duration: string | null;
            slug: string;
            shortDescription: string | null;
            images: string | null;
            features: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            metaKeywords: string | null;
            canonicalUrl: string | null;
            featured: boolean;
            isActive: boolean;
            isDeleted: boolean;
            viewCount: number;
            isFeatured: boolean;
            clientLogo: string | null;
            technologies: string | null;
            thumbnailImage: string | null;
            coverImage: string | null;
            youtubeVideoId: string | null;
            youtubeVideoUrl: string | null;
            demoUrl: string | null;
            githubUrl: string | null;
            liveUrl: string | null;
            teamSize: number | null;
            budget: string | null;
            displayOrder: number;
            testimonial: string | null;
            results: string | null;
            challenges: string | null;
            solutions: string | null;
            ogTitle: string | null;
            ogDescription: string | null;
            ogImage: string | null;
            structuredData: string | null;
            galleryImages: string | null;
            clientLogoUrl: string | null;
            projectDate: Date | null;
            completionDate: Date | null;
        };
    }>;
    uploadGallery(id: string, files: Express.Multer.File[]): Promise<{
        success: boolean;
        urls: string[];
        publicIds: string[];
        totalImages: number;
        project: {
            user: {
                id: string;
                email: string;
                name: string;
            };
        } & {
            category: string | null;
            client: string | null;
            status: string;
            id: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            tags: string | null;
            description: string | null;
            content: string | null;
            startDate: Date | null;
            endDate: Date | null;
            duration: string | null;
            slug: string;
            shortDescription: string | null;
            images: string | null;
            features: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            metaKeywords: string | null;
            canonicalUrl: string | null;
            featured: boolean;
            isActive: boolean;
            isDeleted: boolean;
            viewCount: number;
            isFeatured: boolean;
            clientLogo: string | null;
            technologies: string | null;
            thumbnailImage: string | null;
            coverImage: string | null;
            youtubeVideoId: string | null;
            youtubeVideoUrl: string | null;
            demoUrl: string | null;
            githubUrl: string | null;
            liveUrl: string | null;
            teamSize: number | null;
            budget: string | null;
            displayOrder: number;
            testimonial: string | null;
            results: string | null;
            challenges: string | null;
            solutions: string | null;
            ogTitle: string | null;
            ogDescription: string | null;
            ogImage: string | null;
            structuredData: string | null;
            galleryImages: string | null;
            clientLogoUrl: string | null;
            projectDate: Date | null;
            completionDate: Date | null;
        };
    }>;
    replaceGallery(id: string, files: Express.Multer.File[]): Promise<{
        success: boolean;
        urls: string[];
        publicIds: string[];
        totalImages: number;
        project: {
            user: {
                id: string;
                email: string;
                name: string;
            };
        } & {
            category: string | null;
            client: string | null;
            status: string;
            id: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            tags: string | null;
            description: string | null;
            content: string | null;
            startDate: Date | null;
            endDate: Date | null;
            duration: string | null;
            slug: string;
            shortDescription: string | null;
            images: string | null;
            features: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            metaKeywords: string | null;
            canonicalUrl: string | null;
            featured: boolean;
            isActive: boolean;
            isDeleted: boolean;
            viewCount: number;
            isFeatured: boolean;
            clientLogo: string | null;
            technologies: string | null;
            thumbnailImage: string | null;
            coverImage: string | null;
            youtubeVideoId: string | null;
            youtubeVideoUrl: string | null;
            demoUrl: string | null;
            githubUrl: string | null;
            liveUrl: string | null;
            teamSize: number | null;
            budget: string | null;
            displayOrder: number;
            testimonial: string | null;
            results: string | null;
            challenges: string | null;
            solutions: string | null;
            ogTitle: string | null;
            ogDescription: string | null;
            ogImage: string | null;
            structuredData: string | null;
            galleryImages: string | null;
            clientLogoUrl: string | null;
            projectDate: Date | null;
            completionDate: Date | null;
        };
    }>;
    uploadFromUrls(id: string, body: {
        thumbnailUrl?: string;
        coverUrl?: string;
        galleryUrls?: string[];
    }): Promise<{
        success: boolean;
        results: any;
        project: {
            user: {
                id: string;
                email: string;
                name: string;
            };
        } & {
            category: string | null;
            client: string | null;
            status: string;
            id: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            tags: string | null;
            description: string | null;
            content: string | null;
            startDate: Date | null;
            endDate: Date | null;
            duration: string | null;
            slug: string;
            shortDescription: string | null;
            images: string | null;
            features: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            metaKeywords: string | null;
            canonicalUrl: string | null;
            featured: boolean;
            isActive: boolean;
            isDeleted: boolean;
            viewCount: number;
            isFeatured: boolean;
            clientLogo: string | null;
            technologies: string | null;
            thumbnailImage: string | null;
            coverImage: string | null;
            youtubeVideoId: string | null;
            youtubeVideoUrl: string | null;
            demoUrl: string | null;
            githubUrl: string | null;
            liveUrl: string | null;
            teamSize: number | null;
            budget: string | null;
            displayOrder: number;
            testimonial: string | null;
            results: string | null;
            challenges: string | null;
            solutions: string | null;
            ogTitle: string | null;
            ogDescription: string | null;
            ogImage: string | null;
            structuredData: string | null;
            galleryImages: string | null;
            clientLogoUrl: string | null;
            projectDate: Date | null;
            completionDate: Date | null;
        };
    }>;
}
