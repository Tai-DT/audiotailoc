const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function quickSeed() {
  console.log('üé§ Quick Karaoke Seed Test...');

  try {
    // Test connection
    console.log('1. Testing database connection...');
    await prisma.$connect();
    console.log('‚úÖ Database connected');

    // Create Karaoke category
    console.log('2. Creating Karaoke category...');
    const karaokeCategory = await prisma.category.upsert({
      where: { slug: 'karaoke' },
      update: {},
      create: {
        name: 'Karaoke',
        slug: 'karaoke',
        description: 'Thi·∫øt b·ªã Karaoke chuy√™n nghi·ªáp v√† gia ƒë√¨nh',
        image: '/images/categories/karaoke.jpg',
        seoTitle: 'Thi·∫øt B·ªã Karaoke Chuy√™n Nghi·ªáp | Audio T√†i L·ªôc',
        seoDescription: 'Cung c·∫•p thi·∫øt b·ªã karaoke ch·∫•t l∆∞·ª£ng cao: d√†n karaoke, ƒë·∫ßu karaoke, loa, micro, mixer',
        isActive: true,
      },
    });
    console.log('‚úÖ Karaoke category created:', karaokeCategory.name);

    // Create subcategory
    console.log('3. Creating subcategory...');
    const subcategory = await prisma.category.upsert({
      where: { slug: 'dan-karaoke' },
      update: {},
      create: {
        name: 'D√†n Karaoke',
        slug: 'dan-karaoke',
        description: 'D√†n karaoke t√≠ch h·ª£p ho√†n ch·ªânh',
        image: '/images/categories/dan-karaoke.jpg',
        parentId: karaokeCategory.id,
        isActive: true,
      },
    });
    console.log('‚úÖ Subcategory created:', subcategory.name);

    // Create a sample product
    console.log('4. Creating sample product...');
    const product = await prisma.product.upsert({
      where: { slug: 'dan-karaoke-bmb-csv-900-se' },
      update: {},
      create: {
        name: 'D√†n Karaoke BMB CSV-900 SE',
        slug: 'dan-karaoke-bmb-csv-900-se',
        description: 'D√†n karaoke BMB CSV-900 SE cao c·∫•p',
        shortDescription: 'D√†n karaoke BMB chuy√™n nghi·ªáp',
        sku: 'BMB-CSV-900-SE',
        price: 18000000,
        comparePrice: 20000000,
        costPrice: 15000000,
        stockQuantity: 10,
        weight: 25.5,
        status: 'ACTIVE',
        isActive: true,
        isFeatured: true,
        categoryId: subcategory.id,
        seoTitle: 'D√†n Karaoke BMB CSV-900 SE',
        seoDescription: 'D√†n karaoke BMB CSV-900 SE ch·∫•t l∆∞·ª£ng cao',
      },
    });
    console.log('‚úÖ Product created:', product.name);

    // Create liquidation service
    console.log('5. Creating liquidation service...');
    const liquidationService = await prisma.service.upsert({
      where: { slug: 'thanh-ly-karaoke' },
      update: {},
      create: {
        name: 'D·ªãch V·ª• Thanh L√Ω Thi·∫øt B·ªã Karaoke',
        slug: 'thanh-ly-karaoke',
        description: 'D·ªãch v·ª• thanh l√Ω thi·∫øt b·ªã karaoke chuy√™n nghi·ªáp v·ªõi quy tr√¨nh ƒë√°nh gi√° v√† ƒë·ªãnh gi√° ch√≠nh x√°c',
        shortDescription: 'Thanh l√Ω thi·∫øt b·ªã karaoke uy t√≠n, gi√° t·ªët',
        category: 'LIQUIDATION',
        type: 'EVALUATION',
        basePrice: 500000,
        duration: 240,
        isActive: true,
        tags: ['thanh-l√Ω', 'karaoke', 'ƒë·ªãnh-gi√°', 'thu-mua'],
        metadata: {
          specialization: 'karaoke_equipment',
          processSteps: [
            'Kh·∫£o s√°t v√† ƒë√°nh gi√° t√¨nh tr·∫°ng thi·∫øt b·ªã',
            'ƒê·ªãnh gi√° theo th·ªã tr∆∞·ªùng hi·ªán t·∫°i',
            'Th∆∞∆°ng th·∫£o v√† th·ªèa thu·∫≠n gi√° c·∫£',
            'Thu mua v√† thanh to√°n nhanh ch√≥ng'
          ]
        }
      },
    });
    console.log('‚úÖ Liquidation service created:', liquidationService.name);

    console.log('\nüéâ Quick seed completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Error during seeding:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Run the seed
quickSeed().catch(console.error);
