import { PrismaClient, ServiceCategory, ServiceType } from '@prisma/client';

const prisma = new PrismaClient();

async function seedServices() {
  console.log('üå± Seeding services...');

  // Create sample services
  const services = [
    {
      name: 'L·∫Øp ƒë·∫∑t √¢m thanh gia ƒë√¨nh',
      slug: 'lap-dat-am-thanh-gia-dinh',
      description: 'D·ªãch v·ª• l·∫Øp ƒë·∫∑t h·ªá th·ªëng √¢m thanh cho gia ƒë√¨nh v·ªõi ch·∫•t l∆∞·ª£ng cao, ƒë·∫£m b·∫£o √¢m thanh s·ªëng ƒë·ªông v√† r√µ r√†ng.',
      category: ServiceCategory.INSTALLATION,
      type: ServiceType.HOME_THEATER,
      basePriceCents: 200000000, // 2,000,000 VND
      estimatedDuration: 240, // 4 hours
      requirements: JSON.stringify([
        'Nh√† c√≥ ƒëi·ªán 220V',
        'Kh√¥ng gian t·ªëi thi·ªÉu 20m2',
        'T∆∞·ªùng ƒë·ªß c·ª©ng ƒë·ªÉ g·∫Øn loa'
      ]),
      features: JSON.stringify([
        '√Çm thanh surround 5.1',
        'K·∫øt n·ªëi Bluetooth',
        'ƒêi·ªÅu khi·ªÉn t·ª´ xa',
        'B·∫£o h√†nh 24 th√°ng'
      ]),
      imageUrl: 'https://example.com/home-theater-installation.jpg',
      items: [
        {
          name: 'Loa trung t√¢m',
          description: 'Loa trung t√¢m ch·∫•t l∆∞·ª£ng cao',
          priceCents: 300000000, // 3,000,000 VND
          isRequired: true,
        },
        {
          name: 'Loa tr·∫ßm',
          description: 'Loa si√™u tr·∫ßm cho √¢m bass s√¢u',
          priceCents: 500000000, // 5,000,000 VND
          isRequired: false,
        },
        {
          name: 'D√¢y c√°p chuy√™n d·ª•ng',
          description: 'D√¢y c√°p √¢m thanh ch·∫•t l∆∞·ª£ng cao',
          priceCents: 50000000, // 500,000 VND
          isRequired: true,
        }
      ]
    },
    {
      name: '√Çm thanh chuy√™n nghi·ªáp s·ª± ki·ªán',
      slug: 'am-thanh-chuyen-nghiep-su-kien',
      description: 'D·ªãch v·ª• cho thu√™ v√† l·∫Øp ƒë·∫∑t h·ªá th·ªëng √¢m thanh chuy√™n nghi·ªáp cho c√°c s·ª± ki·ªán, h·ªôi ngh·ªã, ti·ªác c∆∞·ªõi.',
      category: ServiceCategory.RENTAL,
      type: ServiceType.PROFESSIONAL_SOUND,
      basePriceCents: 500000000, // 5,000,000 VND
      estimatedDuration: 480, // 8 hours
      requirements: JSON.stringify([
        'Ngu·ªìn ƒëi·ªán 3 pha',
        'Kh√¥ng gian s·ª± ki·ªán t·ªëi thi·ªÉu 100m2',
        'C√≥ m·∫∑t b·∫±ng ƒë·ªÉ ƒë·∫∑t thi·∫øt b·ªã'
      ]),
      features: JSON.stringify([
        'H·ªá th·ªëng mixer chuy√™n nghi·ªáp',
        'Micro kh√¥ng d√¢y',
        'Loa line array',
        '√Ånh s√°ng s√¢n kh·∫•u'
      ]),
      imageUrl: 'https://example.com/professional-sound.jpg',
      items: [
        {
          name: 'B·ªô mixer chuy√™n nghi·ªáp',
          description: 'Mixer 32 k√™nh v·ªõi hi·ªáu ·ª©ng',
          priceCents: 200000000, // 2,000,000 VND
          isRequired: true,
        },
        {
          name: 'Micro kh√¥ng d√¢y',
          description: 'B·ªô micro kh√¥ng d√¢y ch·∫•t l∆∞·ª£ng cao',
          priceCents: 100000000, // 1,000,000 VND
          isRequired: true,
        },
        {
          name: '√Ånh s√°ng s√¢n kh·∫•u',
          description: 'H·ªá th·ªëng ƒë√®n LED nhi·ªÅu m√†u',
          priceCents: 150000000, // 1,500,000 VND
          isRequired: false,
        }
      ]
    },
    {
      name: 'B·∫£o tr√¨ h·ªá th·ªëng √¢m thanh',
      slug: 'bao-tri-he-thong-am-thanh',
      description: 'D·ªãch v·ª• b·∫£o tr√¨, v·ªá sinh v√† ki·ªÉm tra ƒë·ªãnh k·ª≥ h·ªá th·ªëng √¢m thanh ƒë·ªÉ ƒë·∫£m b·∫£o ho·∫°t ƒë·ªông t·ªëi ∆∞u.',
      category: ServiceCategory.MAINTENANCE,
      type: ServiceType.MAINTENANCE,
      basePriceCents: 100000000, // 1,000,000 VND
      estimatedDuration: 120, // 2 hours
      requirements: JSON.stringify([
        'H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c l·∫Øp ƒë·∫∑t',
        'C√≥ s·∫µn d·ª•ng c·ª• v·ªá sinh',
        'Ti·∫øp c·∫≠n ƒë∆∞·ª£c t·∫•t c·∫£ thi·∫øt b·ªã'
      ]),
      features: JSON.stringify([
        'V·ªá sinh to√†n b·ªô thi·∫øt b·ªã',
        'Ki·ªÉm tra k·∫øt n·ªëi',
        'C·∫≠p nh·∫≠t firmware',
        'B√°o c√°o t√¨nh tr·∫°ng'
      ]),
      imageUrl: 'https://example.com/maintenance.jpg',
      items: [
        {
          name: 'V·ªá sinh chuy√™n s√¢u',
          description: 'V·ªá sinh to√†n b·ªô thi·∫øt b·ªã v·ªõi h√≥a ch·∫•t chuy√™n d·ª•ng',
          priceCents: 50000000, // 500,000 VND
          isRequired: true,
        },
        {
          name: 'Thay th·∫ø linh ki·ªán',
          description: 'Thay th·∫ø c√°c linh ki·ªán h·ªèng (n·∫øu c√≥)',
          priceCents: 200000000, // 2,000,000 VND
          isRequired: false,
        }
      ]
    },
    {
      name: 'Thu mua thi·∫øt b·ªã c≈©',
      slug: 'thu-mua-thiet-bi-cu',
      description: 'D·ªãch v·ª• thu mua v√† thanh l√Ω c√°c thi·∫øt b·ªã √¢m thanh c≈© v·ªõi gi√° h·ª£p l√Ω, h·ªó tr·ª£ kh√°ch h√†ng n√¢ng c·∫•p h·ªá th·ªëng.',
      category: ServiceCategory.LIQUIDATION,
      type: ServiceType.AUDIO_EQUIPMENT,
      basePriceCents: 0, // Gi√° s·∫Ω ƒë∆∞·ª£c t√≠nh theo thi·∫øt b·ªã
      estimatedDuration: 60, // 1 hour
      requirements: JSON.stringify([
        'Thi·∫øt b·ªã c√≤n ho·∫°t ƒë·ªông',
        'C√≥ ƒë·∫ßy ƒë·ªß ph·ª• ki·ªán',
        'Kh√¥ng b·ªã h·ªèng n·∫∑ng'
      ]),
      features: JSON.stringify([
        'ƒê·ªãnh gi√° mi·ªÖn ph√≠',
        'Thu mua t·∫°i nh√†',
        'Thanh to√°n ngay',
        'H·ªó tr·ª£ v·∫≠n chuy·ªÉn'
      ]),
      imageUrl: 'https://example.com/liquidation.jpg',
      items: [
        {
          name: 'ƒê√°nh gi√° thi·∫øt b·ªã',
          description: 'D·ªãch v·ª• ƒë√°nh gi√° v√† ƒë·ªãnh gi√° thi·∫øt b·ªã',
          priceCents: 10000000, // 100,000 VND
          isRequired: true,
        },
        {
          name: 'V·∫≠n chuy·ªÉn',
          description: 'D·ªãch v·ª• v·∫≠n chuy·ªÉn thi·∫øt b·ªã',
          priceCents: 20000000, // 200,000 VND
          isRequired: false,
        }
      ]
    },
    {
      name: 'T∆∞ v·∫•n √¢m thanh',
      slug: 'tu-van-am-thanh',
      description: 'D·ªãch v·ª• t∆∞ v·∫•n chuy√™n s√¢u v·ªÅ thi·∫øt k·∫ø v√† l·ª±a ch·ªçn h·ªá th·ªëng √¢m thanh ph√π h·ª£p v·ªõi nhu c·∫ßu v√† ng√¢n s√°ch.',
      category: ServiceCategory.CONSULTATION,
      type: ServiceType.CONSULTATION,
      basePriceCents: 50000000, // 500,000 VND
      estimatedDuration: 90, // 1.5 hours
      requirements: JSON.stringify([
        'Th√¥ng tin v·ªÅ kh√¥ng gian',
        'Ng√¢n s√°ch d·ª± ki·∫øn',
        'M·ª•c ƒë√≠ch s·ª≠ d·ª•ng'
      ]),
      features: JSON.stringify([
        'T∆∞ v·∫•n 1-1 v·ªõi chuy√™n gia',
        'Thi·∫øt k·∫ø s∆° b·ªô',
        'B√°o gi√° chi ti·∫øt',
        'H·ªó tr·ª£ sau t∆∞ v·∫•n'
      ]),
      imageUrl: 'https://example.com/consultation.jpg',
      items: [
        {
          name: 'T∆∞ v·∫•n c∆° b·∫£n',
          description: 'T∆∞ v·∫•n c∆° b·∫£n v·ªÅ h·ªá th·ªëng √¢m thanh',
          priceCents: 0, // Mi·ªÖn ph√≠
          isRequired: true,
        },
        {
          name: 'Thi·∫øt k·∫ø chi ti·∫øt',
          description: 'Thi·∫øt k·∫ø chi ti·∫øt v·ªõi b·∫£n v·∫Ω 3D',
          priceCents: 100000000, // 1,000,000 VND
          isRequired: false,
        }
      ]
    }
  ];

  for (const serviceData of services) {
    const { items, ...service } = serviceData;
    
    const createdService = await prisma.service.create({
      data: service,
    });

    // Create service items
    for (const itemData of items) {
      await prisma.serviceItem.create({
        data: {
          ...itemData,
          serviceId: createdService.id,
        },
      });
    }

    console.log(`‚úÖ Created service: ${service.name}`);
  }
}

async function seedTechnicians() {
  console.log('üîß Seeding technicians...');

  const technicians = [
    {
      name: 'Nguy·ªÖn VƒÉn An',
      phone: '0901234567',
      email: 'an.nguyen@audiotailoc.com',
      specialties: [ServiceCategory.INSTALLATION, ServiceCategory.MAINTENANCE],
      schedule: [
        { dayOfWeek: 1, startTime: '08:00', endTime: '17:00', isAvailable: true }, // Monday
        { dayOfWeek: 2, startTime: '08:00', endTime: '17:00', isAvailable: true }, // Tuesday
        { dayOfWeek: 3, startTime: '08:00', endTime: '17:00', isAvailable: true }, // Wednesday
        { dayOfWeek: 4, startTime: '08:00', endTime: '17:00', isAvailable: true }, // Thursday
        { dayOfWeek: 5, startTime: '08:00', endTime: '17:00', isAvailable: true }, // Friday
        { dayOfWeek: 6, startTime: '08:00', endTime: '12:00', isAvailable: true }, // Saturday
        { dayOfWeek: 0, startTime: '00:00', endTime: '00:00', isAvailable: false }, // Sunday
      ]
    },
    {
      name: 'Tr·∫ßn Th·ªã B√¨nh',
      phone: '0902345678',
      email: 'binh.tran@audiotailoc.com',
      specialties: [ServiceCategory.RENTAL, ServiceCategory.CONSULTATION],
      schedule: [
        { dayOfWeek: 1, startTime: '09:00', endTime: '18:00', isAvailable: true },
        { dayOfWeek: 2, startTime: '09:00', endTime: '18:00', isAvailable: true },
        { dayOfWeek: 3, startTime: '09:00', endTime: '18:00', isAvailable: true },
        { dayOfWeek: 4, startTime: '09:00', endTime: '18:00', isAvailable: true },
        { dayOfWeek: 5, startTime: '09:00', endTime: '18:00', isAvailable: true },
        { dayOfWeek: 6, startTime: '00:00', endTime: '00:00', isAvailable: false },
        { dayOfWeek: 0, startTime: '00:00', endTime: '00:00', isAvailable: false },
      ]
    },
    {
      name: 'L√™ Minh C∆∞·ªùng',
      phone: '0903456789',
      email: 'cuong.le@audiotailoc.com',
      specialties: [ServiceCategory.MAINTENANCE, ServiceCategory.INSTALLATION],
      schedule: [
        { dayOfWeek: 1, startTime: '10:00', endTime: '19:00', isAvailable: true },
        { dayOfWeek: 2, startTime: '10:00', endTime: '19:00', isAvailable: true },
        { dayOfWeek: 3, startTime: '10:00', endTime: '19:00', isAvailable: true },
        { dayOfWeek: 4, startTime: '10:00', endTime: '19:00', isAvailable: true },
        { dayOfWeek: 5, startTime: '10:00', endTime: '19:00', isAvailable: true },
        { dayOfWeek: 6, startTime: '09:00', endTime: '13:00', isAvailable: true },
        { dayOfWeek: 0, startTime: '00:00', endTime: '00:00', isAvailable: false },
      ]
    }
  ];

  for (const tech of technicians) {
    await prisma.technician.create({
      data: {
        name: tech.name,
        phone: tech.phone,
        email: tech.email,
        specialties: tech.specialties,
        schedule: tech.schedule,
      },
    });
  }

  console.log('‚úÖ Seeded technicians');
}

async function main() {
  await seedServices();
  await seedTechnicians();
}

main()
  .catch((e) => {
    console.error('‚ùå Error during services seeding:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });

