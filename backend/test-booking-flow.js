const axios = require('axios');

const API_BASE_URL = 'http://localhost:3010/api/v1';

async function testBookingFlow() {
  console.log('üéØ Test Booking Flow - Audio T√†i L·ªôc');
  console.log('=====================================');

  try {
    // 1. T·∫°o d·ªãch v·ª• m·ªõi
    console.log('\nüìã 1. T·∫°o d·ªãch v·ª• m·ªõi:');
    const serviceData = {
      name: 'B·∫£o tr√¨ h·ªá th·ªëng √¢m thanh',
      slug: 'bao-tri-he-thong-am-thanh',
      description: 'D·ªãch v·ª• b·∫£o tr√¨ ƒë·ªãnh k·ª≥ h·ªá th·ªëng √¢m thanh',
      category: 'MAINTENANCE',
      type: 'MAINTENANCE',
      basePriceCents: 1000000,
      estimatedDuration: 60,
      requirements: 'H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c l·∫Øp ƒë·∫∑t',
      features: 'Ki·ªÉm tra, v·ªá sinh, thay th·∫ø linh ki·ªán',
      imageUrl: 'https://example.com/maintenance.jpg'
    };

    const serviceResponse = await axios.post(`${API_BASE_URL}/services`, serviceData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer admin-token'
      }
    });

    const service = serviceResponse.data.data;
    console.log(`‚úÖ T·∫°o d·ªãch v·ª• th√†nh c√¥ng: ${service.name} (ID: ${service.id})`);

    // 2. Th√™m h·∫°ng m·ª•c d·ªãch v·ª•
    console.log('\nüîß 2. Th√™m h·∫°ng m·ª•c d·ªãch v·ª•:');
    const itemData = {
      name: 'V·ªá sinh loa',
      description: 'V·ªá sinh v√† b·∫£o d∆∞·ª°ng loa',
      priceCents: 200000,
      isRequired: true
    };

    const itemResponse = await axios.post(`${API_BASE_URL}/services/${service.id}/items`, itemData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer admin-token'
      }
    });

    const item = itemResponse.data.data;
    console.log(`‚úÖ Th√™m h·∫°ng m·ª•c th√†nh c√¥ng: ${item.name} (ID: ${item.id})`);

    // 3. T·∫°o booking v·ªõi h·∫°ng m·ª•c
    console.log('\nüìÖ 3. T·∫°o booking v·ªõi h·∫°ng m·ª•c:');
    const bookingData = {
      serviceId: service.id,
      customerName: 'Tr·∫ßn Th·ªã B',
      customerPhone: '0987654321',
      customerEmail: 'tranthib@example.com',
      customerAddress: '456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 2, TP.HCM',
      scheduledDate: '2024-02-20T00:00:00.000Z',
      scheduledTime: '15:00',
      notes: 'Kh√°ch h√†ng y√™u c·∫ßu b·∫£o tr√¨ v√†o bu·ªïi chi·ªÅu',
      items: [
        {
          itemId: item.id,
          quantity: 1
        }
      ]
    };

    const bookingResponse = await axios.post(`${API_BASE_URL}/bookings`, bookingData, {
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const booking = bookingResponse.data.data;
    console.log(`‚úÖ T·∫°o booking th√†nh c√¥ng: ${booking.bookingNo}`);
    console.log(`   - Kh√°ch h√†ng: ${booking.customerName}`);
    console.log(`   - D·ªãch v·ª•: ${booking.service.name}`);
    console.log(`   - Chi ph√≠ ∆∞·ªõc t√≠nh: ${booking.estimatedCosts.toLocaleString()} VND`);
    console.log(`   - Tr·∫°ng th√°i: ${booking.status}`);

    // 4. Ki·ªÉm tra danh s√°ch booking
    console.log('\nüìã 4. Ki·ªÉm tra danh s√°ch booking:');
    const bookingsResponse = await axios.get(`${API_BASE_URL}/bookings`);
    const bookings = bookingsResponse.data.data.bookings;
    console.log(`‚úÖ T√¨m th·∫•y ${bookings.length} booking`);

    bookings.forEach((b, index) => {
      console.log(`   ${index + 1}. ${b.bookingNo} - ${b.customerName} - ${b.service.name}`);
    });

    // 5. C·∫≠p nh·∫≠t tr·∫°ng th√°i booking (Admin)
    console.log('\nüîÑ 5. C·∫≠p nh·∫≠t tr·∫°ng th√°i booking:');
    const updateStatusData = {
      status: 'CONFIRMED',
      note: 'ƒê√£ x√°c nh·∫≠n booking',
      changedBy: 'admin_123'
    };

    const statusResponse = await axios.put(`${API_BASE_URL}/bookings/${booking.id}/status`, updateStatusData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer admin-token'
      }
    });

    console.log(`‚úÖ C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng: ${statusResponse.data.data.status}`);

    // 6. Th·ªëng k√™ booking
    console.log('\nüìä 6. Th·ªëng k√™ booking:');
    const statsResponse = await axios.get(`${API_BASE_URL}/bookings/stats`, {
      headers: {
        'Authorization': 'Bearer admin-token'
      }
    });

    const stats = statsResponse.data.data;
    console.log(`‚úÖ Th·ªëng k√™ booking:`);
    console.log(`   - T·ªïng booking: ${stats.totalBookings}`);
    console.log(`   - ƒêang ch·ªù: ${stats.pendingBookings}`);
    console.log(`   - ƒê√£ x√°c nh·∫≠n: ${stats.confirmedBookings}`);
    console.log(`   - Ho√†n th√†nh: ${stats.completedBookings}`);
    console.log(`   - T·ªïng doanh thu: ${stats.totalRevenue?.toLocaleString()} VND`);

    // 7. Th·ªëng k√™ d·ªãch v·ª•
    console.log('\nüìà 7. Th·ªëng k√™ d·ªãch v·ª•:');
    const serviceStatsResponse = await axios.get(`${API_BASE_URL}/services/stats`, {
      headers: {
        'Authorization': 'Bearer admin-token'
      }
    });

    const serviceStats = serviceStatsResponse.data.data;
    console.log(`‚úÖ Th·ªëng k√™ d·ªãch v·ª•:`);
    console.log(`   - T·ªïng d·ªãch v·ª•: ${serviceStats.totalServices}`);
    console.log(`   - D·ªãch v·ª• ho·∫°t ƒë·ªông: ${serviceStats.activeServices}`);
    console.log(`   - T·ªïng booking: ${serviceStats.totalBookings}`);
    console.log(`   - Doanh thu th√°ng n√†y: ${serviceStats.revenueThisMonth?.toLocaleString()} VND`);

    console.log('\nüéâ Test booking flow ho√†n th√†nh th√†nh c√¥ng!');
    console.log('=====================================');

  } catch (error) {
    console.error('‚ùå L·ªói trong qu√° tr√¨nh test:', error.response?.data || error.message);
  }
}

// Ch·∫°y test
testBookingFlow();


